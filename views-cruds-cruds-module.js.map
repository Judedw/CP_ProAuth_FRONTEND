{"version":3,"sources":["webpack:///./src/app/shared/animations/egret-animations.ts","webpack:///./src/app/views/cruds/crud-ngx-table/crud-ngx-table.component.html","webpack:///./src/app/views/cruds/crud-ngx-table/crud-ngx-table.component.ts","webpack:///./src/app/views/cruds/crud-ngx-table/ngx-table-popup/ngx-table-popup.component.html","webpack:///./src/app/views/cruds/crud-ngx-table/ngx-table-popup/ngx-table-popup.component.ts","webpack:///./src/app/views/cruds/cruds.module.ts","webpack:///./src/app/views/cruds/cruds.routing.ts","webpack:///./src/environments/environment.prod.ts"],"names":[],"mappings":"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","file":"views-cruds-cruds-module.js","sourcesContent":["import {\r\n\tsequence,\r\n\ttrigger,\r\n\tanimate,\r\n\tstyle,\r\n\tgroup,\r\n\tquery,\r\n\ttransition,\r\n\tanimateChild,\r\n\tstate,\r\n\tanimation,\r\n\tuseAnimation,\r\n\tstagger\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation([\r\n\tstyle({\r\n\t\topacity: '{{opacity}}',\r\n\t\ttransform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\r\n\t}),\r\n\tanimate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\r\n], {\r\n\t\tparams: {\r\n\t\t\tduration: '200ms',\r\n\t\t\tdelay: '0ms',\r\n\t\t\topacity: '0',\r\n\t\t\tscale: '1',\r\n\t\t\tx: '0',\r\n\t\t\ty: '0',\r\n\t\t\tz: '0'\r\n\t\t}\r\n\t});\r\n\r\nexport const egretAnimations = [\r\n\ttrigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\ntrigger('fadeInOut', [\r\n\tstate('0', style({\r\n\t\t\topacity: 0,\r\n\t\t\tdisplay  : 'none'\r\n\t})),\r\n\tstate('1', style({\r\n\t\t\topacity: 1,\r\n\t\t\tdisplay  : 'block'\r\n\t})),\r\n\ttransition('0 => 1', animate('300ms')),\r\n\ttransition('1 => 0', animate('300ms'))\r\n]),\r\n]","module.exports = \"<div class=\\\"m-333\\\">\\r\\n  <!-- <span fxFlex></span> -->\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" color=\\\"primary\\\" (click)=\\\"openPopUp({}, true)\\\">Add Client</button>\\r\\n</div>\\r\\n<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <ngx-datatable\\r\\n          class=\\\"material ml-0 mr-0\\\"\\r\\n          [rows]=\\\"items\\\"\\r\\n          [columnMode]=\\\"'flex'\\\"\\r\\n          [headerHeight]=\\\"50\\\"\\r\\n          [footerHeight]=\\\"50\\\"\\r\\n          [limit]=\\\"10\\\"\\r\\n          [rowHeight]=\\\"'auto'\\\">\\r\\n          <ngx-datatable-column name=\\\"Client Code\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              {{ row?.code }}\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n          <ngx-datatable-column name=\\\"Name\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              {{ row?.name }}\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n\\r\\n          <ngx-datatable-column name=\\\"Contacts\\\" [flexGrow]=\\\"2\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              {{ row?.description }}\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n\\r\\n\\r\\n          <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n              <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openPopUp(row)\\\"><mat-icon>edit</mat-icon></button>\\r\\n              <button mat-icon-button mat-sm-button color=\\\"warn\\\" (click)=\\\"deleteItem(row)\\\"><mat-icon>delete</mat-icon></button>\\r\\n            </ng-template>\\r\\n          </ngx-datatable-column>\\r\\n        </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { CrudService } from \"../crud.service\";\r\nimport { MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { NgxTablePopupComponent } from \"./ngx-table-popup/ngx-table-popup.component\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { Client } from \"../user.model\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\n\r\n@Component({\r\n  selector: \"app-crud-ngx-table\",\r\n  templateUrl: \"./crud-ngx-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class CrudNgxTableComponent implements OnInit, OnDestroy {\r\n  public items: any[];\r\n\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private crudService: CrudService,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.getItemSub = this.crudService.getItems().subscribe(\r\n      successResp => {\r\n        this.items = successResp.content;\r\n      },\r\n      error => {\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add new client\" : \"Update client\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      NgxTablePopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data }\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // If user press cancel\r\n        return;\r\n      }\r\n      this.loader.open();\r\n      if (isNew) {\r\n        this.crudService.addItem(res, this.items).subscribe(\r\n          response => {\r\n            this.items = response;\r\n            this.loader.close();\r\n            this.snack.open(\"New client added !\", \"OK\", { duration: 4000 });\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.crudService.updateItem(data.id, res).subscribe(\r\n          response => {\r\n            this.items = this.items.map(i => {\r\n              if (i.id === data.id) {\r\n                return Object.assign({}, i, response.content);\r\n              }\r\n              return i;\r\n            });\r\n            this.loader.close();\r\n            this.snack.open(\"Client Updated!\", \"OK\", { duration: 4000 });\r\n            return this.items.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.name}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.crudService.removeItem(row.id).subscribe(\r\n            data => {\r\n              console.log(row);\r\n              console.log(this.items[0]);\r\n              let i = this.items.indexOf(row);\r\n              this.items.splice(i, 1);\r\n              this.loader.close();\r\n              this.snack.open(\"Client deleted!\", \"OK\", { duration: 4000 });\r\n              return this.items.slice();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError({\r\n                title: \"Error\",\r\n                status: error.status,\r\n                type: \"http_error\"\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\r\\n<form [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"code\\\" [formControl]=\\\"itemForm.controls['code']\\\" placeholder=\\\"Client Code\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"clientName\\\" [formControl]=\\\"itemForm.controls['name']\\\" placeholder=\\\"Name\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <textarea matInput name=\\\"description\\\" placeholder=\\\"Contacts\\\" [formControl]=\\\"itemForm.controls['description']\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"itemForm.invalid\\\">Save</button>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ngx-table-popup',\r\n  templateUrl: './ngx-table-popup.component.html'\r\n})\r\nexport class NgxTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  //Raveen : need to implement a custom directive for the pattern validation\r\n  //public codeRegex = '/^-?[0-9]+(\\.[0-9]*){0,1}$/g';\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<NgxTablePopupComponent>,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload)\r\n  }\r\n  buildItemForm(item) {\r\n\r\n    this.itemForm = this.fb.group({\r\n      name: [item.name || '', Validators.required],\r\n      description: [item.description || '', Validators.required],\r\n      code: [item.code || '', Validators.required],\r\n      // company: [item.company || ''],\r\n      // phone: [item.phone || ''],\r\n      // address: [item.address || ''],\r\n      // balance: [item.balance || ''],\r\n      // isActive: [item.isActive || false]\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { \r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatButtonModule,\r\n  MatChipsModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatSlideToggleModule\r\n } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CrudNgxTableComponent } from './crud-ngx-table/crud-ngx-table.component';\r\n\r\nimport { CrudsRoutes } from './cruds.routing';\r\nimport { CrudService } from './crud.service';\r\nimport { NgxTablePopupComponent } from './crud-ngx-table/ngx-table-popup/ngx-table-popup.component'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatSlideToggleModule,\r\n    SharedModule,\r\n    RouterModule.forChild(CrudsRoutes)\r\n  ],\r\n  declarations: [CrudNgxTableComponent, NgxTablePopupComponent],\r\n  providers: [CrudService],\r\n  entryComponents: [NgxTablePopupComponent]\r\n})\r\nexport class CrudsModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { CrudNgxTableComponent } from './crud-ngx-table/crud-ngx-table.component';\r\n\r\nexport const CrudsRoutes: Routes = [\r\n  { \r\n    path: 'ngx-table', \r\n    component: CrudNgxTableComponent, \r\n    data: { title: 'Client Section', breadcrumb: 'Client' } \r\n  }\r\n];","export const environment = {\r\n  production: true,\r\n  apiURL: \"productionApi\",\r\n  // productApiURL:'https://authentican60aazs63l.ca1.hana.ondemand.com/product/api/',\r\n  // surveyApiURL : 'https://authentican60aazs63l.ca1.hana.ondemand.com/survey/api/',\r\n  //productApiURL: \"http://localhost:10001/api/\",\r\n  //surveyApiURL: \"http://localhost:10002/api/\"\r\n   productApiURL: \"https://productzg4t4ks63a.hana.ondemand.com/product/api/\",\r\n   surveyApiURL: \"https://surveyzg4t4ks63a.hana.ondemand.com/survey/api/\"\r\n};\r\n"],"sourceRoot":""}