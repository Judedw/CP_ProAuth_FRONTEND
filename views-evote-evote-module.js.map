{"version":3,"sources":["webpack:///./src/app/views/evote/evote-service.service.ts","webpack:///./src/app/views/evote/evote-table/evote-popup/evote-popup.component.html","webpack:///./src/app/views/evote/evote-table/evote-popup/evote-popup.component.ts","webpack:///./src/app/views/evote/evote-table/evote-table.component.html","webpack:///./src/app/views/evote/evote-table/evote-table.component.ts","webpack:///./src/app/views/evote/evote.module.ts","webpack:///./src/app/views/evote/evote.routing.ts","webpack:///./src/app/views/evote/voter-popup/voter-popup.component.html","webpack:///./src/app/views/evote/voter-popup/voter-popup.component.ts"],"names":[],"mappings":"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","file":"views-evote-evote-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class EvoteService {\r\n  surveyApiUrl: string = environment.surveyApiURL + \"evotes/\";\r\n  populateVoterUrl: string = environment.surveyApiURL + \"voters\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllEvotesSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get(this.surveyApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAllEvotes(): Observable<any> {\r\n    return this.http.get(this.surveyApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeEvotes(row, items): Observable<any> {\r\n    return this.http.delete(this.surveyApiUrl + row.id, this.httpOptions).pipe(\r\n      // map(data => {\r\n      //   console.log(items);\r\n      //   let i = items.indexOf(row);\r\n      //   console.log('I : ' + i);\r\n      //   items.splice(i, 1);\r\n      //   return items;\r\n      // }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  addEvote(evoteObj, items): Observable<any> {\r\n    return this.http.post<any>(this.surveyApiUrl, evoteObj).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateEvote(id, item) {\r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  populateVoters(voteObj): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.populateVoterUrl, voteObj)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getEvoteById(evoteId): Observable<any> {\r\n    console.log(\"called get evote by id\");\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + evoteId, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    return throwError(error);\r\n  }\r\n}\r\n","module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\r\\n<form [formGroup]=\\\"evoteForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n\\r\\n    <!-- <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput placeholder=\\\"Choose a client\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"productForm.controls['client']\\\" >\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\" >\\r\\n            <mat-option *ngFor=\\\"let user of (filteredClient | async)?.content\\\" [value]=\\\"user\\\">\\r\\n              <span>{{ user.name }}</span>\\r\\n            </mat-option>\\r\\n        </mat-autocomplete>\\r\\n    </div> -->\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput [formControl]=\\\"evoteForm.controls['topic']\\\" required name=\\\"topic\\\" placeholder=\\\"Topic\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <mat-select *ngIf='data.isNew'  [formControl]=\\\"evoteForm.controls['clientId']\\\" required placeholder=\\\"Select A Client\\\">\\r\\n          <mat-option>none</mat-option>\\r\\n          <mat-option *ngFor=\\\"let client of clients\\\"  [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n        </mat-select>\\r\\n\\r\\n        <mat-select *ngIf='!data.isNew' [disabled]='!data.isNew' [formControl]=\\\"evoteForm.controls['clientId']\\\" required placeholder=\\\"Select A Client\\\">\\r\\n          <mat-option  *ngFor='let client of clients | arrayFilter : evoteForm.controls[\\\"clientId\\\"].value : \\\"clients\\\"'  [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n        </mat-select>\\r\\n\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput [formControl]=\\\"evoteForm.controls['code']\\\" required name=\\\"proCode\\\" placeholder=\\\"Product Code\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"desc\\\" [formControl]=\\\"evoteForm.controls['description']\\\" required name=\\\"description\\\" placeholder=\\\"Description\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input type=\\\"number\\\" matInput name=\\\"quantity\\\" [formControl]=\\\"evoteForm.controls['quantity']\\\" min=\\\"1\\\" postiveNumberOnly\\r\\n          required placeholder=\\\"Quantity\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"expireDate\\\" [min]=\\\"tomorrow\\\" [matDatepicker]=\\\"picker\\\"  [formControl]=\\\"evoteForm.controls['expireDate']\\\" required placeholder=\\\"Expire Date\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n        </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"batchNumber\\\" [formControl]=\\\"evoteForm.controls['batchNumber']\\\" required placeholder=\\\"Batch Number\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-card-content>\\r\\n        <input (change)=\\\"onSelectFile($event)\\\" id=\\\"imageAvatar\\\" type=\\\"file\\\"  [formControl]=\\\"evoteForm.controls['file']\\\" />\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <p>Image Preview</p>\\r\\n      <img width=\\\"200px\\\" height=\\\"250px\\\" src=\\\"\\\"  src=\\\"{{ imageUrl}}\\\" id=\\\"dishPhoto\\\">\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-card-content>\\r\\n\\r\\n        <div class=\\\"mb-1 mt-1\\\">\\r\\n          <p>Upload a Product Image</p>\\r\\n          <input (change)=\\\"onSelectFile($event)\\\" type=\\\"file\\\" [formControl]=\\\"evoteForm.controls['file']\\\" ng2FileSelect [uploader]=\\\"uploader\\\"\\r\\n          />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"mb-1\\\">\\r\\n          <div ng2FileDrop [ngClass]=\\\"{'dz-file-over': hasBaseDropZoneOver}\\\" [uploader]=\\\"uploader\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n            class=\\\"fileupload-drop-zone\\\">\\r\\n            Drop png/jpeg file here\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <table class=\\\"default-table mat-box-shadow\\\" style=\\\"width: 100%\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th width=\\\"50%\\\">Name</th>\\r\\n              <th>Size</th>\\r\\n              <th>Actions</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngIf=\\\"uploader.queue.length; else tableNoData\\\">\\r\\n            <tr>\\r\\n              <td>{{ imageObject.file.name }}</td>\\r\\n              <td nowrap>{{ imageObject.file.size/1024/1024 | number:'.2' }} MB</td>\\r\\n              <td nowrap>\\r\\n                <button mat-raised-button class=\\\"mat-warn\\\" type='button' (click)=\\\"imageObject.remove()\\\">Remove</button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n          <ng-template #tableNoData>\\r\\n            <p [ngStyle]=\\\"{padding: '0 1.2rem'}\\\">Queue is empty</p>\\r\\n          </ng-template>\\r\\n        </table>\\r\\n\\r\\n      </mat-card-content>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"evoteForm.invalid\\\">Save</button>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MAT_DATE_FORMATS,\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE\r\n} from \"../../../../../../node_modules/@angular/material\";\r\nimport { Subscription } from \"../../../../../../node_modules/rxjs\";\r\nimport { EvoteService } from \"../../evote-service.service\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport { DateValidator } from \"../../../../utility/dateValidator\";\r\nimport { CrudService } from \"../../../cruds/crud.service\";\r\nimport { ResponseModel } from \"../../../../model/ResponseModel.model\";\r\nimport { FileUploader } from \"ng2-file-upload\";\r\nimport * as moment from \"moment\";\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\"\r\n  },\r\n  display: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"YYYY-MM-DD\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"app-evote-popup\",\r\n  templateUrl: \"./evote-popup.component.html\",\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ]\r\n})\r\nexport class EvotePopupComponent implements OnInit {\r\n  public evoteForm: FormGroup;\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n  tomorrow: Date;\r\n  public clients: any[];\r\n  imageFile: File;\r\n\r\n  // image uploader related properties\r\n  public uploader: FileUploader = new FileUploader({ url: \"upload_url\" });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  imageObject: any;\r\n  imageUrl: any = \"assets/images/placeholder.jpg\";\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private evoteService: EvoteService,\r\n    private clientService: CrudService,\r\n    public dialogRef: MatDialogRef<EvotePopupComponent>\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.tomorrow = DateValidator.dateValidate();\r\n    this.buildEvoteForm(this.data.payload);\r\n    this.getClientSuggestions();\r\n    // console.log(this.data.payload);\r\n  }\r\n\r\n  getClientSuggestions() {\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n      });\r\n  }\r\n\r\n  // image uploader related functions from here\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    let x = this.uploader.queue.length - 1;\r\n    this.imageObject = this.uploader.queue[x];\r\n\r\n    let reader = new FileReader();\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      this.imageFile = event.target.files[0];\r\n      reader.readAsDataURL(this.imageFile);\r\n      reader.onload = (event: any) => {\r\n        this.imageUrl = event.target.result;\r\n        console.log(\"IMAGE URL  : \" + this.imageUrl);\r\n      };\r\n    }\r\n  }\r\n\r\n  buildEvoteForm(fieldItem) {\r\n    this.evoteForm = this.fb.group({\r\n      topic: [fieldItem.topic || \"\", Validators.required],\r\n      clientId: [fieldItem.clientId || \"\"],\r\n      code: [fieldItem.code || \"\", Validators.required],\r\n      description: [fieldItem.description || \"\", Validators.required],\r\n      quantity: [fieldItem.quantity || \"\", Validators.required],\r\n      expireDate: [fieldItem.expireDate || \"\", Validators.required],\r\n      batchNumber: [fieldItem.batchNumber || \"\", Validators.required],\r\n      file: [fieldItem.file || \"\"]\r\n    });\r\n  }\r\n  submit() {\r\n    console.log(\"PRODUCT FORM VALUES \");\r\n    console.log(this.evoteForm.value);\r\n\r\n    let evoteRequest: EvoteCreationRequest = new EvoteCreationRequest(\r\n      this.evoteForm.value\r\n    );\r\n\r\n    console.log(\"EVOTE CreationRequest\" + JSON.stringify(evoteRequest));\r\n\r\n    let formData;\r\n\r\n    console.log(\"NEW SAVE CONTEXT\");\r\n    console.log(this.prepareToSave(evoteRequest));\r\n    formData = this.prepareToSave(evoteRequest);\r\n\r\n    //console.log(this.evoteForm.value)\r\n    console.log(\"prepared form data \");\r\n    console.log(formData);\r\n    this.dialogRef.close(formData);\r\n  }\r\n  prepareToSave(formvalue): FormData {\r\n    let input: FormData = new FormData();\r\n    input.append(\"code\", formvalue.code);\r\n    input.append(\"quantity\", formvalue.quantity);\r\n    input.append(\r\n      \"expireDate\",\r\n      moment(formvalue.expireDate).format(\"YYYY-MM-DD\")\r\n    );\r\n    input.append(\"topic\", formvalue.topic);\r\n    input.append(\"description\", formvalue.description);\r\n    input.append(\"batchNumber\", formvalue.batchNumber);\r\n    input.append(\"clientId\", formvalue.clientId.id);\r\n    input.append(\"file\", this.imageFile);\r\n\r\n    return input;\r\n  }\r\n}\r\n\r\nexport class EvoteCreationRequest {\r\n  code: string;\r\n  quantity: string;\r\n  expireDate: string;\r\n  topic: string;\r\n  description: string;\r\n  batchNumber: string;\r\n  clientId: ClientSub;\r\n  file: any;\r\n\r\n  constructor(public formValue: any) {\r\n    this.code = formValue.code;\r\n    this.quantity = formValue.quantity;\r\n    this.expireDate = formValue.expireDate;\r\n    this.topic = formValue.topic;\r\n    this.description = formValue.description;\r\n    this.batchNumber = formValue.batchNumber;\r\n    this.clientId = new ClientSub(formValue.clientId);\r\n    this.file = formValue.file;\r\n  }\r\n}\r\n\r\nclass ClientSub {\r\n  constructor(public id: string) {}\r\n}\r\n","module.exports = \"<mat-form-field class=\\\"margin-333\\\" style=\\\"width: 99%\\\">\\r\\n  <input matInput placeholder=\\\"Type to filter all columns\\\" value=\\\"\\\" (keyup)='updateFilter($event)'>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"m-333\\\">\\r\\n  <!-- <span fxFlex></span> -->\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" (click)=\\\"openEvotePopup({}, true)\\\" color=\\\"primary\\\">Add Evote</button>\\r\\n  <span fxFlex></span>\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" (click)=\\\"openVoterPopup({})\\\" color=\\\"accent\\\">Add Voters</button>\\r\\n</div>\\r\\n\\r\\n<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\" [rows]=\\\"rows\\\" [columns]=\\\"\\\">\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Topic\\\"  [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.topic }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Client\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <span *ngFor='let client of clients | arrayFilter : row?.clientId : \\\"clients\\\"' >{{ client.name }}</span>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Code\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.code }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Quantity\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.quantity }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Expire Date\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.expireDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Batch Number\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.batchNumber }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" (click)=\\\"openEvotePopup(row)\\\" class=\\\"mr-1\\\"><mat-icon>edit</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"mr-1\\\" (click)=\\\"deleteEvote(row)\\\"><mat-icon>delete</mat-icon></button>\\r\\n          <!-- <button mat-icon-button mat-sm-button   (click)=\\\"downloadCsv(row)\\\"><mat-icon>file_download</mat-icon></button> -->\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { EvoteService } from \"../evote-service.service\";\r\nimport { Subscription } from \"../../../../../node_modules/rxjs\";\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  DateAdapter\r\n} from \"../../../../../node_modules/@angular/material\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { AppFileDownloadService } from \"../../../shared/services/file-download.service\";\r\nimport { AppDataConversionService } from \"../../../shared/services/data-conversion.service\";\r\nimport { EvotePopupComponent } from \"../../evote/evote-table/evote-popup/evote-popup.component\";\r\nimport { VoterPopupComponent } from \"../voter-popup/voter-popup.component\";\r\nimport { ResponseModel } from \"../../../model/ResponseModel.model\";\r\nimport { CrudService } from \"../../cruds/crud.service\";\r\n\r\n@Component({\r\n  selector: \"app-evote-table\",\r\n  templateUrl: \"./evote-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class EvoteTableComponent implements OnInit, OnDestroy {\r\n  rows: any[];\r\n  columns = [];\r\n  temp = [];\r\n\r\n  public clients: any[];\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n\r\n  public getEvoteSub: Subscription;\r\n  constructor(\r\n    private evoteService: EvoteService,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private confirmService: AppConfirmService,\r\n    private downloadService: AppFileDownloadService,\r\n    private conversionService: AppDataConversionService,\r\n    private dialog: MatDialog,\r\n    private clientService : CrudService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllEvote();\r\n    this.getClientSuggestions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getClientSub) {\r\n      this.getClientSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // downloadCsv(selectedRow) {\r\n  //   const fileName  =  selectedRow.topic + '_' + selectedRow.code + '_' + selectedRow.batchNumber;\r\n  //   const csvData =  this.conversionService.convertToCsv(selectedRow.productDetails);\r\n  //   this.downloadService.downloadFile({ name: fileName, type : 'csv' , data : csvData });\r\n  // }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    let columns = Object.keys(this.temp[0]);\r\n    columns.splice(columns.length - 1);\r\n\r\n    if (!columns.length) return;\r\n\r\n    const rows = this.temp.filter(function(data) {\r\n      for (let i = 0; i <= columns.length; i++) {\r\n        let column = columns[i];\r\n        if (\r\n          data[column] &&\r\n          data[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(val) > -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    this.rows = rows;\r\n  }\r\n\r\n  getClientSuggestions() {\r\n    console.log('called suggestions')\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n        console.log(this.clients)\r\n      });\r\n  }\r\n\r\n  getAllEvote() {\r\n    this.getEvoteSub = this.evoteService.getAllEvotes().subscribe(\r\n      successResp => {\r\n        this.rows = successResp.content;\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        console.log(error);\r\n        console.log(error.status);\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n  deleteEvote(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.description}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.evoteService.removeEvotes(row, this.rows).subscribe(\r\n            data => {\r\n              this.getAllEvote();\r\n              this.loader.close();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError({\r\n                title: \"Error\",\r\n                status: error.status,\r\n                type: \"http_error\"\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openEvotePopup(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add new E vote\" : \"Update E vote\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(EvotePopupComponent, {\r\n      width: \"720px\",\r\n      disableClose: true,\r\n      data: { title: title, payload: data ,isNew: isNew}\r\n    });\r\n\r\n    console.log(\"RES data :\");\r\n    console.log(data);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n\r\n      console.log(\"RES obj :\");\r\n      console.log(res);\r\n\r\n\r\n     // res.expireDate = moment(res.expireDate).format(\"YYYY-MM-DD\");\r\n\r\n      if (isNew) {\r\n        this.evoteService.addEvote(res, this.rows).subscribe(\r\n          data => {\r\n            this.rows = data;\r\n            this.loader.close();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.evoteService.updateEvote(data.id, res).subscribe(\r\n          response => {\r\n            console.log(response.content);\r\n            this.rows = this.rows.map(i => {\r\n              if (i.id === data.id) {\r\n                return Object.assign({}, i, response.content);\r\n              }\r\n              return i;\r\n            });\r\n\r\n            this.loader.close();\r\n            return this.rows.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  openVoterPopup(data: any = {}) {\r\n    let title = \"Populate Voters \";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(VoterPopupComponent, {\r\n      width: \"400px\",\r\n      disableClose: true,\r\n      data: { title: title, payload: data }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      console.log(\"FORM DATA  : \");\r\n      console.log(res);\r\n\r\n      this.evoteService.populateVoters(res).subscribe(\r\n        response => {\r\n          console.log(\"response of populate voters : \");\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          this.loader.close();\r\n          this.errDialog.showError({\r\n            title: \"Error\",\r\n            status: error.status,\r\n            type: \"http_error\"\r\n          });\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EvoteRouts } from './evote.routing';\r\nimport { EvoteService } from './evote-service.service';\r\nimport {\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatAutocompleteModule } from '@angular/material';\r\nimport { EvoteTableComponent } from './evote-table/evote-table.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { EvotePopupComponent } from './evote-table/evote-popup/evote-popup.component';\r\nimport { VoterPopupComponent } from './voter-popup/voter-popup.component';\r\nimport { CrudService } from '../cruds/crud.service';\r\nimport { ArrayFilter } from '../../shared/pipes/array-filter.pipe';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { FileUploadModule } from \"ng2-file-upload\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatCardModule,\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatAutocompleteModule,\r\n    SharedModule,\r\n    FileUploadModule,\r\n    RouterModule.forChild(EvoteRouts)\r\n  ],\r\n  providers: [EvoteService,CrudService],\r\n  declarations: [EvoteTableComponent, EvotePopupComponent, VoterPopupComponent],\r\n  entryComponents: [EvotePopupComponent,VoterPopupComponent]\r\n})\r\nexport class EvoteModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { EvoteTableComponent } from './evote-table/evote-table.component';\r\n\r\n\r\nexport const EvoteRouts: Routes = [\r\n  {\r\n    path: 'showEvote',\r\n    component: EvoteTableComponent,\r\n    data: { title: 'E-Vote', breadcrumb: 'E vote' }\r\n  }\r\n];\r\n","module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\n<form [formGroup]=\\\"voterForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\n\\n\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-select [formControl]=\\\"voterForm.controls['client']\\\" required placeholder=\\\"Select A Client\\\">\\n          <mat-option>none</mat-option>\\n          <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\n      <input type='file' (change)=\\\"handleFileInput($event.target.files)\\\" [formControl]=\\\"voterForm.controls['file']\\\" required name=\\\"file\\\">\\n    </div>\\n\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"voterForm.invalid\\\">Save</button>\\n      <span fxFlex></span>\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRefVote.close(false)\\\">Cancel</button>\\n    </div>\\n\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject, OnDestroy } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { EvoteService } from \"../evote-service.service\";\nimport { Subscription } from \"rxjs\";\nimport { CrudService } from \"../../cruds/crud.service\";\nimport { ResponseModel } from \"../../../model/ResponseModel.model\";\n\n@Component({\n  selector: \"app-voter-popup\",\n  templateUrl: \"./voter-popup.component.html\"\n})\nexport class VoterPopupComponent implements OnInit, OnDestroy {\n  public voterForm: FormGroup;\n\n  public clients: any[];\n  public getClientSub: Subscription;\n  public response: ResponseModel;\n  fileObject: File = null;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private evoteService: EvoteService,\n    private clientService: CrudService,\n    public dialogRefVote: MatDialogRef<VoterPopupComponent>\n  ) {}\n\n  ngOnInit() {\n    this.getClients();\n    this.buildVoterForm(this.data.payload);\n  }\n\n  ngOnDestroy() {\n    if (this.getClientSub) {\n      this.getClientSub.unsubscribe();\n    }\n  }\n\n  getClients() {\n    this.getClientSub = this.clientService\n      .getClientSuggestions()\n      .subscribe(data => {\n        this.response = data;\n        this.clients = this.response.content;\n      });\n  }\n\n  buildVoterForm(fieldItem) {\n    this.voterForm = this.fb.group({\n      client: [fieldItem.client || \"\", Validators.required],\n      file: [fieldItem.file || \"\", Validators.required]\n    });\n  }\n\n  submit() {\n    console.log(\"called submit \");\n    this.dialogRefVote.close(this.prepareToSave(this.voterForm.value));\n  }\n\n  prepareToSave(formValue): any {\n    let formData: FormData = new FormData();\n    formData.append(\"client\", formValue.client);\n    formData.append(\"file\", this.fileObject);\n    return formData;\n  }\n\n  handleFileInput(files: FileList) {\n    console.log(\"called hande file \");\n    let fileItem = files.item(0);\n    console.log(\"file input has changed. The file is\", fileItem);\n    this.fileObject = fileItem;\n  }\n}\n"],"sourceRoot":""}