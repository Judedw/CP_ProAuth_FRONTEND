{"version":3,"sources":["webpack:///./src/app/directives/DateValidator.directive.ts","webpack:///./src/app/directives/PositiveNumber.directive.ts","webpack:///./src/app/views/product-crud/product-crud.module.ts","webpack:///./src/app/views/product-crud/product-crud.routing.ts","webpack:///./src/app/views/product-crud/product-crud.service.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.ts"],"names":[],"mappings":"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","file":"views-product-crud-product-crud-module.js","sourcesContent":["import { Directive, ElementRef, Renderer, OnInit } from '@angular/core';\r\nimport { min } from \"date-fns\";\r\n\r\n@Directive({\r\n  selector: \"[dateValidator]\"\r\n})\r\nexport class DateValidator implements OnInit {\r\n  constructor(private el: ElementRef, private renderer: Renderer) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.renderer.setElementProperty(\r\n      this.el.nativeElement,\r\n      \"[min]\",\r\n      this.dateValidate()\r\n    );\r\n  }\r\n\r\n  dateValidate() {\r\n    console.log(\"date validator\");\r\n    const today =  new Date();\r\n    const tomorrow =  new Date(today.setDate(today.getDate() + 1));\r\n    console.log(today)\r\n    console.log(tomorrow)\r\n    return tomorrow;\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[postiveNumberOnly]\"\r\n})\r\nexport class PositiveNumberOnly {\r\n  // Allow positive number greater than 0\r\n  private regex: RegExp = new RegExp(/^[+]?([1-9]+(?:[1-9]*)?|\\.[1-9]+)$/);\r\n  // Allow key codes for special events. Reflect :\r\n  // Backspace, tab, end, home\r\n  private specialKeys: Array<string> = [\"Backspace\", \"Tab\", \"End\", \"Home\"];\r\n\r\n  constructor(private el: ElementRef) {}\r\n  @HostListener(\"keydown\", [\"$event\"])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    // Allow Backspace, tab, end, and home keys\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n    let current: string = this.el.nativeElement.value;\r\n    let next: string = current.concat(event.key);\r\n    if (next && !String(next).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ProductFilterTableComponent } from \"./product-filter-table/product-filter-table.component\";\r\nimport { RouterModule } from \"../../../../node_modules/@angular/router\";\r\nimport { ProductCrudRouts } from \"./product-crud.routing\";\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatAutocompleteModule,\r\n  MatProgressBarModule\r\n\r\n} from \"../../../../node_modules/@angular/material\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { ProductCrudService } from \"./product-crud.service\";\r\nimport { ProductCrudPopupComponent } from \"./product-filter-table/product-crud-popup/product-crud-popup.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { CrudService } from \"../cruds/crud.service\";\r\nimport { PositiveNumberOnly } from \"../../directives/PositiveNumber.directive\";\r\nimport { DateValidator } from \"../../directives/DateValidator.directive\";\r\nimport { FileUploadModule } from \"ng2-file-upload\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatAutocompleteModule,\r\n    FileUploadModule,\r\n    MatProgressBarModule,\r\n    RouterModule.forChild(ProductCrudRouts)\r\n  ],\r\n  declarations: [\r\n    ProductFilterTableComponent,\r\n    ProductCrudPopupComponent,\r\n    PositiveNumberOnly,\r\n    DateValidator\r\n  ],\r\n  providers: [ProductCrudService, CrudService],\r\n  entryComponents: [ProductCrudPopupComponent]\r\n})\r\nexport class ProductCrudModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ProductFilterTableComponent } from './product-filter-table/product-filter-table.component';\r\n\r\nexport const ProductCrudRouts: Routes = [\r\n    {\r\n        path: 'show',\r\n        component: ProductFilterTableComponent,\r\n        data: { title: 'Product Section', breadcrumb: 'Product' }\r\n    }\r\n];","import { Injectable } from \"@angular/core\";\r\n\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { throwError, Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ProductCrudService {\r\n  productApiUrl: string = environment.productApiURL + \"products/\";\r\n  recentProduct: any;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.log(\"URL : \" + this.productApiUrl);\r\n  }\r\n\r\n  updateProduct(id, item) {\r\n    return this.http\r\n      .put<any>(this.productApiUrl + id, item, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addProduct(productObj, items): Observable<any> {\r\n    return this.http.post<any>(this.productApiUrl, productObj).pipe(\r\n      map(response => {\r\n        console.log(JSON.stringify(response.content.id));\r\n        return response.content.id;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getAllProducts(): Observable<any> {\r\n    return this.http.get(this.productApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeProduct(row, items): Observable<any> {\r\n    return this.http.delete(this.productApiUrl + row.id).pipe(\r\n      map(data => {\r\n        let i = items.indexOf(row);\r\n        items.splice(i, 1);\r\n        return items;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getAllProductSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get(this.productApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getProductById(proId): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.productApiUrl + proId, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    //console.log(error)\r\n    return throwError(error);\r\n  }\r\n}\r\n","module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\r\\n<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n\\r\\n    <!-- <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Choose a client\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"productForm.controls['client']\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n        <mat-option *ngFor=\\\"let user of (filteredClient | async)?.content\\\" [value]=\\\"user.name\\\">\\r\\n          <span>{{ user.name }}</span>\\r\\n        </mat-option>\\r\\n      </mat-autocomplete>\\r\\n    </div> -->\\r\\n\\r\\n    <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <mat-select [disabled]='!data.isNew' [formControl]=\\\"productForm.controls['client']\\\" required placeholder=\\\"Select A Client\\\">\\r\\n          <mat-option>none</mat-option>\\r\\n          <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.id\\\">{{client.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput [formControl]=\\\"productForm.controls['code']\\\" required name=\\\"proCode\\\" placeholder=\\\"Product Code\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput [formControl]=\\\"productForm.controls['name']\\\" required name=\\\"name\\\" placeholder=\\\"Product Name\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"desc\\\" [formControl]=\\\"productForm.controls['description']\\\" required name=\\\"description\\\"\\r\\n          placeholder=\\\"Description\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"batchNumber\\\" [formControl]=\\\"productForm.controls['batchNumber']\\\" required placeholder=\\\"Batch Number\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input type=\\\"number\\\" matInput name=\\\"quantity\\\" [formControl]=\\\"productForm.controls['quantity']\\\" min=\\\"1\\\"\\r\\n          postiveNumberOnly required placeholder=\\\"Quantity\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"expireDate\\\" [min]=\\\"tomorrow\\\" [matDatepicker]=\\\"picker\\\" [formControl]=\\\"productForm.controls['expireDate']\\\"\\r\\n          required placeholder=\\\"Expire Date\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n        </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n      <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <mat-card-content>\\r\\n          <input (change)=\\\"onSelectFile($event)\\\" id=\\\"imageAvatar\\\" type=\\\"file\\\" [formControl]=\\\"productForm.controls['file']\\\" />\\r\\n        </mat-card-content>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n        <p>Image Preview</p>\\r\\n        <img width=\\\"200px\\\" height=\\\"250px\\\" src=\\\"\\\"  src=\\\"{{ imageUrl}}\\\" id=\\\"dishPhoto\\\">\\r\\n      </div>\\r\\n\\r\\n\\r\\n    <!-- <div *ngIf='data.isNew' fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n      <mat-card-content>\\r\\n\\r\\n        <div class=\\\"mb-1 mt-1\\\">\\r\\n          <p>Upload a Product Image</p>\\r\\n          <input (change)=\\\"onSelectFile($event)\\\" type=\\\"file\\\" [formControl]=\\\"productForm.controls['file']\\\" ng2FileSelect\\r\\n            [uploader]=\\\"uploader\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"mb-1\\\">\\r\\n          <div ng2FileDrop [ngClass]=\\\"{'dz-file-over': hasBaseDropZoneOver}\\\" [uploader]=\\\"uploader\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n            class=\\\"fileupload-drop-zone\\\">\\r\\n            Drop png/jpeg file here\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <table class=\\\"default-table mat-box-shadow\\\" style=\\\"width: 100%\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th width=\\\"50%\\\">Name</th>\\r\\n              <th>Size</th>\\r\\n              <th>Actions</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngIf=\\\"uploader.queue.length; else tableNoData\\\">\\r\\n            <tr>\\r\\n              <td>{{ imageObject.file.name }}</td>\\r\\n              <td nowrap>{{ imageObject.file.size/1024/1024 | number:'.2' }} MB</td>\\r\\n              <td nowrap>\\r\\n                <button mat-raised-button class=\\\"mat-warn\\\" type='button' (click)=\\\"imageObject.remove()\\\">Remove</button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n          <ng-template #tableNoData>\\r\\n            <p [ngStyle]=\\\"{padding: '0 1.2rem'}\\\">Queue is empty</p>\\r\\n          </ng-template>\\r\\n        </table>\\r\\n\\r\\n\\r\\n\\r\\n      </mat-card-content>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"productForm.invalid\\\">Save</button>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MAT_DATE_FORMATS,\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE\r\n} from \"@angular/material\";\r\nimport { CrudService } from \"../../../cruds/crud.service\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { ResponseModel } from \"../../../../model/ResponseModel.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport { debounceTime, switchMap, distinctUntilChanged } from \"rxjs/operators\";\r\nimport { Clients, Content } from \"./../../../../model/ClientModel.model\";\r\n\r\nimport { DateValidator } from \"../../../../utility/dateValidator\";\r\n\r\nimport { FileUploader } from \"ng2-file-upload\";\r\nimport * as moment from \"moment\";\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\"\r\n  },\r\n  display: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"YYYY-MM-DD\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"app-product-crud-popup\",\r\n  templateUrl: \"./product-crud-popup.component.html\",\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ]\r\n})\r\nexport class ProductCrudPopupComponent implements OnInit {\r\n  public productForm: FormGroup;\r\n  public clients: any[];\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n  public filteredClient: Observable<Clients>;\r\n  tomorrow: Date;\r\n  imageFile: File;\r\n  imageUrl: any = \"assets/images/placeholder.jpg\";\r\n\r\n  // image uploader related properties\r\n  public uploader: FileUploader = new FileUploader({ url: \"upload_url\" });\r\n  public hasBaseDropZoneOver: boolean = false;\r\n  imageObject: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ProductCrudPopupComponent>,\r\n    private clientService: CrudService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // validate back dates\r\n    this.tomorrow = DateValidator.dateValidate();\r\n\r\n    this.getClientSuggestions();\r\n    this.buildProductForm(this.data.payload);\r\n    this.filteredClient = this.productForm.get(\"client\").valueChanges.pipe(\r\n      debounceTime(200),\r\n      switchMap(value => this.clientService.search({ name: value }, 1))\r\n    );\r\n  }\r\n\r\n  getClientSuggestions() {\r\n    this.getClientSub = this.clientService\r\n      .getClientSuggestions()\r\n      .subscribe(data => {\r\n        this.response = data;\r\n        this.clients = this.response.content;\r\n      });\r\n  }\r\n\r\n  getAllClients() {\r\n    this.getClientSub = this.clientService.getItems().subscribe(data => {\r\n      this.response = data;\r\n      this.clients = this.response.content;\r\n    });\r\n  }\r\n\r\n  buildProductForm(fieldItem) {\r\n    const client = fieldItem.client;\r\n    const clientId = client ? client.id : null;\r\n\r\n    this.productForm = this.fb.group({\r\n      client: [clientId || \"\"],\r\n      code: [fieldItem.code || \"\", Validators.required],\r\n      name: [fieldItem.name || \"\", Validators.required],\r\n      description: [fieldItem.description || \"\", Validators.required],\r\n      batchNumber: [fieldItem.batchNumber || \"\", Validators.required],\r\n      quantity: [fieldItem.quantity || \"\", Validators.required],\r\n      expireDate: [fieldItem.expireDate || \"\", Validators.required],\r\n      file: [fieldItem.file || \"\"]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(\"PRODUCT FORM VALUES \");\r\n    console.log(this.productForm.value);\r\n\r\n    let productRequest: ProductCreationRequest = new ProductCreationRequest(\r\n      this.productForm.value\r\n    );\r\n\r\n    console.log(\"ProductCreationRequest\" + JSON.stringify(productRequest));\r\n\r\n    let formData;\r\n    if (this.data.isNew) {\r\n      console.log(\"NEW SAVE CONTEXT\");\r\n      formData = this.prepareToSave(productRequest);\r\n    } else {\r\n      console.log(\"update context\");\r\n      formData = productRequest;\r\n    }\r\n\r\n    console.log(\"prepared form data \");\r\n    console.log(JSON.stringify(formData));\r\n    this.dialogRef.close(formData);\r\n  }\r\n\r\n  // image uploader related functions from here\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    let x = this.uploader.queue.length - 1;\r\n    this.imageObject = this.uploader.queue[x];\r\n\r\n    let reader = new FileReader();\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      this.imageFile = event.target.files[0];\r\n      reader.readAsDataURL(this.imageFile);\r\n      reader.onload = (event: any) => {\r\n        this.imageUrl = event.target.result;\r\n        console.log(\"IMAGE URL  : \" + this.imageUrl);\r\n      };\r\n    }\r\n  }\r\n\r\n  prepareToSave(formvalue): FormData {\r\n    let input: FormData = new FormData();\r\n    input.append(\"file\", this.imageFile);\r\n    input.append(\"code\", formvalue.code);\r\n    input.append(\"quantity\", formvalue.quantity);\r\n    input.append(\"client\", formvalue.client.id);\r\n    input.append(\r\n      \"expireDate\",\r\n      moment(formvalue.expireDate).format(\"YYYY-MM-DD\")\r\n    );\r\n    input.append(\"name\", formvalue.name);\r\n    input.append(\"description\", formvalue.description);\r\n    input.append(\"batchNumber\", formvalue.batchNumber);\r\n\r\n    return input;\r\n  }\r\n}\r\n\r\nexport class ProductCreationRequest {\r\n  client: ClientSub;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  batchNumber: string;\r\n  quantity: string;\r\n  expireDate: string;\r\n  file: any;\r\n\r\n  constructor(public formValue: any) {\r\n    this.client = new ClientSub(formValue.client);\r\n    this.code = formValue.code;\r\n    this.name = formValue.name;\r\n    this.description = formValue.description;\r\n    this.batchNumber = formValue.batchNumber;\r\n    this.quantity = formValue.quantity;\r\n    this.expireDate = formValue.expireDate;\r\n    this.file = formValue.file;\r\n  }\r\n}\r\n\r\nclass ClientSub {\r\n  constructor(public id: string) {}\r\n}\r\n","module.exports = \"<mat-form-field class=\\\"margin-333\\\" style=\\\"width: 99%\\\">\\r\\n  <input matInput placeholder=\\\"Type to filter all columns\\\" value=\\\"\\\" (keyup)='updateFilter($event)'>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"m-333\\\">\\r\\n  <!-- <span fxFlex></span> -->\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" color=\\\"primary\\\" (click)=\\\"openProductPopup({}, true)\\\">Add Product</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\" [rows]=\\\"rows\\\" [columns]=\\\"\\\">\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Client\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.client.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Product Code\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.code }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Product Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Batch Number\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.batchNumber }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Quantity\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.quantity }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Expire Date\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.expireDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openProductPopup(row)\\\"><mat-icon>edit</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"mr-1\\\" (click)=\\\"deleteProduct(row)\\\"><mat-icon>delete</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button   (click)=\\\"downloadCsv(row)\\\"><mat-icon>file_download</mat-icon></button>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ProductCrudService } from \"../product-crud.service\";\r\nimport { MatDialogRef, MatDialog, DateAdapter } from \"@angular/material\";\r\nimport { ProductCrudPopupComponent } from \"./product-crud-popup/product-crud-popup.component\";\r\n\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { AppFileDownloadService } from \"../../../shared/services/file-download.service\";\r\nimport { AppDataConversionService } from \"../../../shared/services/data-conversion.service\";\r\nimport { Content } from \"../../../model/ClientModel.model\";\r\n\r\n@Component({\r\n  selector: \"app-product-filter-table\",\r\n  templateUrl: \"./product-filter-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class ProductFilterTableComponent implements OnInit, OnDestroy {\r\n  rows: any[];\r\n  columns = [];\r\n  temp = [];\r\n  public getProductsSub: Subscription;\r\n  updatable: boolean;\r\n\r\n  constructor(\r\n    private prodService: ProductCrudService,\r\n    private dialog: MatDialog,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private confirmService: AppConfirmService,\r\n    private downloadService: AppFileDownloadService,\r\n    private conversionService: AppDataConversionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllProduct();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getProductsSub) {\r\n      this.getProductsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  downloadCsv(selectedRow) {\r\n    const fileName =\r\n      selectedRow.name + \"_\" + selectedRow.code + \"_\" + selectedRow.batchNumber;\r\n    const csvData = this.conversionService.convertToCsv(\r\n      selectedRow.productDetails\r\n    );\r\n    this.downloadService.downloadFile({\r\n      name: fileName,\r\n      type: \"csv\",\r\n      data: csvData\r\n    });\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    let columns = Object.keys(this.temp[0]);\r\n    columns.splice(columns.length - 1);\r\n\r\n    if (!columns.length) return;\r\n\r\n    const rows = this.temp.filter(function(data) {\r\n      for (let i = 0; i <= columns.length; i++) {\r\n        let column = columns[i];\r\n        if (\r\n          data[column] &&\r\n          data[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(val) > -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    this.rows = rows;\r\n  }\r\n\r\n  getAllProduct() {\r\n    this.getProductsSub = this.prodService.getAllProducts().subscribe(\r\n      successResp => {\r\n        this.rows = this.temp = successResp.content;\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        console.log(error);\r\n        console.log(error.status);\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteProduct(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.description}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.prodService.removeProduct(row, this.rows).subscribe(\r\n            data => {\r\n              this.rows = data;\r\n              this.loader.close();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError({\r\n                title: \"Error\",\r\n                status: error.status,\r\n                type: \"http_error\"\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openProductPopup(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add new Product\" : \"Update Product\";\r\n\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      ProductCrudPopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data, isNew: isNew }\r\n      }\r\n    );\r\n\r\n    console.log(\"RES data :\");\r\n    console.log(data);\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n\r\n      console.log(\"RES obj :\");\r\n      console.log(res);\r\n\r\n      //res.expireDate = moment(res.expireDate).format(\"YYYY-MM-DD\");\r\n\r\n      if (isNew) {\r\n        this.prodService.addProduct(res, this.rows).subscribe(\r\n          data => {\r\n            let id = data;\r\n            this.prodService.getProductById(id).subscribe(data => {\r\n              this.rows = this.rows.concat(data.content);\r\n              console.log(this.rows);\r\n            });\r\n\r\n            this.loader.close();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.prodService.updateProduct(data.id, res).subscribe(\r\n          response => {\r\n            console.log(response.content);\r\n            this.prodService\r\n              .getProductById(response.content.id)\r\n              .subscribe(data => {\r\n                this.rows = this.rows.map(i => {\r\n                  if (i.id === data.content.id) {\r\n                    console.log(\"recent obj \" + JSON.stringify(data.content));\r\n                    return Object.assign({}, i, data.content);\r\n                  }\r\n                  return i;\r\n                });\r\n              });\r\n\r\n            this.loader.close();\r\n            return this.rows.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  // getProductById(productId) {\r\n  //   this.prodService.getProductById(productId).subscribe(\r\n  //     response => {\r\n  //       this.recentProduct = response.content;\r\n  //       console.log(\r\n  //         \"recent product obj : \" + JSON.stringify(this.recentProduct)\r\n  //       );\r\n  //     },\r\n  //     error => {\r\n  //       this.loader.close();\r\n  //       this.errDialog.showError({\r\n  //         title: \"Error\",\r\n  //         status: error.status,\r\n  //         type: \"http_error\"\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n}\r\n"],"sourceRoot":""}