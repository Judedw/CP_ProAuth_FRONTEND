{"version":3,"sources":["webpack:///./src/app/views/form/form.component.html","webpack:///./src/app/views/form/form.component.scss","webpack:///./src/app/views/form/form.component.ts","webpack:///./src/app/views/form/form.module.ts","webpack:///./src/app/views/form/form.routing.ts","webpack:///./src/app/views/form/form.service.ts","webpack:///./src/environments/environment.prod.ts"],"names":[],"mappings":"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","file":"views-form-form-module.js","sourcesContent":["module.exports = \"<form class=\\\"example-form\\\" [formGroup]='userForm'>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Choose a user\\\" [matAutocomplete]=\\\"auto\\\" formControlName='userInput'>\\r\\n  </mat-form-field>\\r\\n  <img src=\\\"https://productzg4t4ks63a.hana.ondemand.com/product/downloadFile/bljmY_5VgFlwM-WCMP7huDNzv9CuHWvAogEJnY_Bh8U\\\" alt=\\\"Flowers in Chania\\\" width=\\\"460\\\" height=\\\"345\\\">\\r\\n  <mat-autocomplete #auto=\\\"matAutocomplete\\\" >\\r\\n      <mat-option *ngFor=\\\"let user of (filteredClient | async)?.content\\\" [value]=\\\"user\\\">\\r\\n        <span>{{ user.name }}</span>\\r\\n\\r\\n\\r\\n      </mat-option>\\r\\n  </mat-autocomplete>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormService } from \"./form.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { debounceTime, switchMap } from \"rxjs/operators\";\r\nimport { Clients, Content } from \"../../model/ClientModel.model\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-form\",\r\n  templateUrl: \"./form.component.html\",\r\n  styleUrls: [\"./form.component.scss\"]\r\n})\r\nexport class FormComponent implements OnInit {\r\n  filteredClient: Observable<Clients>;\r\n  userForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private newform: FormService) {}\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.fb.group({\r\n      userInput: null\r\n    });\r\n    this.filteredClient = this.userForm.get(\"userInput\").valueChanges.pipe(\r\n      debounceTime(300),\r\n      switchMap(value => this.newform.search({ name: value }, 1))\r\n    );\r\n    console.log();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '../../../../node_modules/@angular/router';\r\nimport { FormRoutes } from './form.routing';\r\nimport { FormComponent } from './form.component';\r\nimport { FormService } from './form.service';\r\nimport { MatAutocompleteModule, MatInputModule, MatFormFieldModule, MatButtonModule } from '@angular/material';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatAutocompleteModule, \r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,     \r\n    RouterModule.forChild(FormRoutes)\r\n  ],\r\n  providers: [FormService],\r\n  declarations: [FormComponent]\r\n})\r\nexport class FormModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FormComponent } from './form.component';\r\n\r\n\r\nexport const FormRoutes: Routes = [\r\n    { path: 'showForm', component: FormComponent, data: { title: 'Form' } }\r\n];","import { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpClient } from \"../../../../node_modules/@angular/common/http\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { Clients, Content } from \"../../model/ClientModel.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class FormService {\r\n  clientApiUrl: string = environment.productApiURL + \"clients/suggestions\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  search(\r\n    filter: { name: string } = { name: \"\" },\r\n    page = 1\r\n  ): Observable<Clients> {\r\n    return this.http.get<Clients>(this.clientApiUrl).pipe(\r\n      tap((response: Clients) => {\r\n        response.content = response.content\r\n          .map(content => new Content(content.id, content.name))\r\n\r\n          .filter(content =>\r\n            content.name.toLocaleLowerCase().includes(filter.name)\r\n          );\r\n\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  apiURL: \"productionApi\",\r\n  // productApiURL:'https://authentican60aazs63l.ca1.hana.ondemand.com/product/api/',\r\n  // surveyApiURL : 'https://authentican60aazs63l.ca1.hana.ondemand.com/survey/api/',\r\n  //productApiURL: \"http://localhost:10001/api/\",\r\n  //surveyApiURL: \"http://localhost:10002/api/\"\r\n   productApiURL: \"https://productzg4t4ks63a.hana.ondemand.com/product/api/\",\r\n   surveyApiURL: \"https://surveyzg4t4ks63a.hana.ondemand.com/survey/api/\"\r\n};\r\n"],"sourceRoot":""}