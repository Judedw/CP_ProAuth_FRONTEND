{"version":3,"sources":["webpack:///./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/debounceTime.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/distinctUntilChanged.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/switchMap.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/debounceTime.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/distinctUntilChanged.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/switchMap.js","webpack:///./src/app/directives/PositiveNumber.directive.ts","webpack:///./src/app/views/product-crud/product-crud.module.ts","webpack:///./src/app/views/product-crud/product-crud.routing.ts","webpack:///./src/app/views/product-crud/product-crud.service.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-crud-popup/product-crud-popup.component.ts","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.html","webpack:///./src/app/views/product-crud/product-filter-table/product-filter-table.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AAC6C;AACR;AACzD;AACmC;;AAEnC;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,EAAE,UAAU,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2CAA2C,qDAAqD,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,iCAAiC,uCAAuC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,+DAAiB,GAAG,yIAAyC,IAAI;AAC1G,SAAS,gCAAgC,+DAAiB,GAAG,uGAAyD,IAAI;AAC1H,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,eAAe,EAAE;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,4FAA0C;AAC3E,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;ACheqB;AACE;AACvB;AACA,wC;;;;;;;;;;;;;;;ACHqB;AACU;AAC/B;AACA,gD;;;;;;;;;;;;;;;ACHqB;AACD;AACpB;AACA,qC;;;;;;;;;;;;;;;;ACHyB;AACa;AACtC;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,UAAU,iCAAiC,oBAAoB;AAC1E;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAA4B;AAC3D;AACA;AACA,wC;;;;;;;;;;;;;;;ACpD8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP,OAAO;AACP;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;;;AC5C4C;AAC5C;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;AC3CoE;AAKpE;IAOE,4BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QANlC,uCAAuC;QAC/B,UAAK,GAAW,IAAI,MAAM,CAAC,oCAAoC,CAAC,CAAC;QACzE,gDAAgD;QAChD,4BAA4B;QACpB,gBAAW,GAAkB,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAEpC,CAAC;IAEtC,sCAAS,GAAT,UAAU,KAAoB;QAC5B,2CAA2C;QAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC;QACT,CAAC;QACD,IAAI,OAAO,GAAW,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;QAClD,IAAI,IAAI,GAAW,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5C,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAVD;QADC,kEAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACnB,aAAa;;uDAU7B;IAnBU,kBAAkB;QAH9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;SAChC,CAAC;yCAQwB,wDAAU;OAPvB,kBAAkB,CAoB9B;IAAD,yBAAC;CAAA;AApB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLU;AACM;AACqD;AAC5B;AACd;AAWN;AACS;AACD;AACuD;AAC9D;AACG;AACJ;AAC2B;AA2B/E;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAzB7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAgB;gBAChB,kEAAmB;gBACnB,6EAAc;gBACd,0EAAkB;gBAClB,8EAAe;gBACf,4EAAa;gBACb,8EAAe;gBACf,8EAAe;gBACf,kFAAmB;gBACnB,kFAAmB;gBACnB,4EAAa;gBACb,oFAAqB;gBACrB,yEAAY,CAAC,QAAQ,CAAC,sEAAgB,CAAC;aACxC;YACD,YAAY,EAAE;gBACZ,gHAA2B;gBAC3B,+HAAyB;gBACzB,wFAAkB;aACnB;YACD,SAAS,EAAE,CAAC,wEAAkB,EAAE,gEAAW,CAAC;YAC5C,eAAe,EAAE,CAAC,+HAAyB,CAAC;SAC7C,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;AC/CsE;AAE7F,IAAM,gBAAgB,GAAW;IACpC;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,gHAA2B;QACtC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAE,SAAS,EAAE;KAC5D;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVyC;AAMY;AAKN;AACW;AACb;AAK/C;IAUE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,kBAAa,GAAW,yEAAW,CAAC,UAAU,GAAG,WAAW,CAAC;QAE7D,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,6EAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,8BAA8B,EAAE,6EAA6E;aAC9G,CAAC;SACH,CAAC;IAEqC,CAAC;IAExC,0CAAa,GAAb,UAAc,EAAE,EAAE,IAAI;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,IAAI,CAAC,aAAa,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;aACzD,IAAI,CAAC,+EAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,uCAAU,GAAV,UAAW,UAAU,EAAE,KAAK;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAM,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;aAC3D,IAAI,CACH,wEAAG,CAAC,cAAI;YACN,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,CAAC,EACF,+EAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,2CAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,+EAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,0CAAa,GAAb,UAAc,GAAG,EAAE,KAAK;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACzE,wEAAG,CAAC,cAAI;YACN,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,EACF,+EAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAEO,wCAAW,GAAnB,UAAoB,KAA8B;QAChD,oBAAoB;QACpB,MAAM,CAAC,oEAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IA/CU,kBAAkB;QAD9B,gEAAU,EAAE;yCAWe,4EAAU;OAVzB,kBAAkB,CAgD9B;IAAD,yBAAC;CAAA;AAhD8B;;;;;;;;;;;;AClB/B,uCAAuC,YAAY,8bAA8b,aAAa,k0E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApc;AAOA;AACA;AAOlC;AAC6C;AAG7B;AACQ;AAEX;AAM9B,IAAM,UAAU,GAAG;IACxB,KAAK,EAAE;QACL,SAAS,EAAE,YAAY;KACxB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,YAAY;QAC3B,kBAAkB,EAAE,WAAW;KAChC;CACF,CAAC;AAcF;IAOE,mCACkC,IAAS,EAClC,SAAkD,EACjD,aAA0B,EAC1B,EAAe;QAHS,SAAI,GAAJ,IAAI,CAAK;QAClC,cAAS,GAAT,SAAS,CAAyC;QACjD,kBAAa,GAAb,aAAa,CAAa;QAC1B,OAAE,GAAF,EAAE,CAAa;IACtB,CAAC;IAEJ,4CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAE9B,CAAC;IAEO,2CAAO,GAAf,UAAgB,KAAa;QAC3B,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM;YAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAIO;QAHL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,cAAI;YAC1E,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACtC,CAAC,CAAC;IAAC,CAAC;IAEP,iDAAa,GAAb;QAAA,iBAKC;QAJC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9D,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAgB,GAAhB,UAAiB,SAAS;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,IAAI,EAAE,CAAC;YACxC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;YAChC,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,IAAI,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/D,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/D,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,0CAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAzDU,yBAAyB;QAZrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;YAElC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,0EAAW;oBACpB,QAAQ,EAAE,kFAAiB;oBAC3B,IAAI,EAAE,CAAC,8EAAe,CAAC;iBACxB;gBACD,EAAE,OAAO,EAAE,+EAAgB,EAAE,QAAQ,EAAE,UAAU,EAAE;aACpD;SACF,CAAC;QASG,uEAAM,CAAC,8EAAe,CAAC;iDACN,2EAAY;YACP,+DAAW;YACtB,0DAAW;OAXd,yBAAyB,CA0DrC;IAAD,gCAAC;CAAA;AA1DqC;;;;;;;;;;;;ACpDtC,2WAA2W,0FAA0F,kBAAkB,wBAAwB,yYAAyY,oBAAoB,2NAA2N,aAAa,2NAA2N,aAAa,0NAA0N,oBAAoB,2NAA2N,oBAAoB,uNAAuN,iBAAiB,0NAA0N,mBAAmB,0vB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjtE;AACA;AAKN;AACuC;AAEJ;AACH;AAET;AACe;AAE5D;AACuD;AACI;AAO5F;IAME,qCACU,WAA+B,EAC/B,MAAiB,EACjB,MAAwB,EACxB,SAA0B,EAC1B,cAAiC,EACjC,eAAuC,EACvC,iBAA4C;QAN5C,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAkB;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,mBAAc,GAAd,cAAc,CAAmB;QACjC,oBAAe,GAAf,eAAe,CAAwB;QACvC,sBAAiB,GAAjB,iBAAiB,CAA2B;QAXtD,YAAO,GAAG,EAAE,CAAC;QACb,SAAI,GAAG,EAAE,CAAC;IAWP,CAAC;IAEJ,8CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,iDAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;IAED,iDAAW,GAAX,UAAY,WAAW;QACrB,IAAM,QAAQ,GAAK,WAAW,CAAC,IAAI,GAAG,GAAG,GAAG,WAAW,CAAC,IAAI,GAAG,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC;QAC7F,IAAM,OAAO,GAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QACjF,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAG,KAAK,EAAG,IAAI,EAAG,OAAO,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,kDAAY,GAAZ,UAAa,KAAK;QAChB,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEnC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC;QAE5B,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAS,IAAI;YACzC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxB,EAAE,CAAC,CACD,IAAI,CAAC,MAAM,CAAC;oBACZ,IAAI,CAAC,MAAM,CAAC;yBACT,QAAQ,EAAE;yBACV,WAAW,EAAE;yBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACrB,CAAC,CAAC,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,mDAAa,GAAb;QAAA,iBAgBC;QAfC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAC/D,qBAAW;YACT,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBACvB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mDAAa,GAAb,UAAc,GAAG;QAAjB,iBAsBC;QArBC,IAAI,CAAC,cAAc;aAChB,OAAO,CAAC,EAAE,OAAO,EAAE,YAAU,GAAG,CAAC,WAAW,MAAG,EAAE,CAAC;aAClD,SAAS,CAAC,aAAG;YACZ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACnB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACtD,cAAI;oBACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACtB,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC;wBACvB,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,KAAK,CAAC,MAAM;wBACpB,IAAI,EAAE,YAAY;qBACnB,CAAC,CAAC;gBACL,CAAC,CACF,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAgB,GAAhB,UAAiB,IAAc,EAAE,KAAM;QAAvC,iBA+DC;QA/DgB,gCAAc;QAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,gBAAgB,CAAC;QACzD,IAAI,SAAS,GAAsB,IAAI,CAAC,MAAM,CAAC,IAAI,CACjD,0GAAyB,EACzB;YACE,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;SACtC,CACF,CAAC;QAEF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACnC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,wBAAwB;gBACxB,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAEnB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjB,GAAG,CAAC,UAAU,GAAG,mCAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAE7D,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACnD,cAAI;oBACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACtB,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC;wBACvB,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,KAAK,CAAC,MAAM;wBACpB,IAAI,EAAE,YAAY;qBACnB,CAAC,CAAC;gBACL,CAAC,CACF,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,SAAS,CACpD,kBAAQ;oBACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC9B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAC;wBACzB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;4BACrB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;wBAChD,CAAC;wBACD,MAAM,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;oBAEH,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC3B,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC;wBACvB,KAAK,EAAE,OAAO;wBACd,MAAM,EAAE,KAAK,CAAC,MAAM;wBACpB,IAAI,EAAE,YAAY;qBACnB,CAAC,CAAC;gBACL,CAAC,CACF,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAjKU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;YAEpC,UAAU,EAAE,mFAAe;SAC5B,CAAC;yCAQuB,wEAAkB;YACvB,wEAAS;YACT,+FAAgB;YACb,4FAAe;YACV,kGAAiB;YAChB,6FAAsB;YACnB,kGAAwB;OAb3C,2BAA2B,CAkKvC;IAAD,kCAAC;CAAA;AAlKuC","file":"views-product-crud-product-crud-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { Inject, Injectable, Optional, InjectionToken, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default, {  } from 'moment';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ moment = _rollupMoment__default || _rollupMoment;\n/**\n * InjectionToken for moment date adapter to configure options.\n */\nvar /** @type {?} */ MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    var /** @type {?} */ valuesArray = Array(length);\n    for (var /** @type {?} */ i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nvar MomentDateAdapter = /** @class */ (function (_super) {\n    __extends(MomentDateAdapter, _super);\n    function MomentDateAdapter(dateLocale, options) {\n        var _this = _super.call(this) || this;\n        _this.options = options;\n        _this.setLocale(dateLocale || moment.locale());\n        return _this;\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.setLocale = /**\n     * @param {?} locale\n     * @return {?}\n     */\n    function (locale) {\n        var _this = this;\n        _super.prototype.setLocale.call(this, locale);\n        var /** @type {?} */ momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, function (i) { return _this.createDate(2017, 0, i + 1).format('D'); }),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getYear = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).year();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).month();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getDate = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).date();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getDayOfWeek = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).day();\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getMonthNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    };\n    /**\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getDateNames = /**\n     * @return {?}\n     */\n    function () {\n        return this._localeData.dates;\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getDayOfWeekNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getYearName = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).format('YYYY');\n    };\n    /**\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getFirstDayOfWeek = /**\n     * @return {?}\n     */\n    function () {\n        return this._localeData.firstDayOfWeek;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.getNumDaysInMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).daysInMonth();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.clone = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.clone().locale(this.locale);\n    };\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.createDate = /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n        }\n        if (date < 1) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n        }\n        var /** @type {?} */ result = this._createMoment({ year: year, month: month, date: date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.today = /**\n     * @return {?}\n     */\n    function () {\n        return this._createMoment().locale(this.locale);\n    };\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.parse = /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    function (value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    };\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.format = /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    function (date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    };\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.addCalendarYears = /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    function (date, years) {\n        return this.clone(date).add({ years: years });\n    };\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.addCalendarMonths = /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    function (date, months) {\n        return this.clone(date).add({ months: months });\n    };\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.addCalendarDays = /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    function (date, days) {\n        return this.clone(date).add({ days: days });\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.toIso8601 = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).format();\n    };\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     */\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.deserialize = /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ date;\n        if (value instanceof Date) {\n            date = this._createMoment(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return date;\n        }\n        return _super.prototype.deserialize.call(this, value);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.isDateInstance = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        return moment.isMoment(obj);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.clone(date).isValid();\n    };\n    /**\n     * @return {?}\n     */\n    MomentDateAdapter.prototype.invalid = /**\n     * @return {?}\n     */\n    function () {\n        return moment.invalid();\n    };\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @param {...?} args\n     * @return {?}\n     */\n    MomentDateAdapter.prototype._createMoment = /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @param {...?} args\n     * @return {?}\n     */\n    function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (this.options && this.options.useUtc) ? moment.utc.apply(moment, args) : moment.apply(void 0, args);\n    };\n    MomentDateAdapter.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    MomentDateAdapter.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] },] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] },] },\n    ]; };\n    return MomentDateAdapter;\n}(DateAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar /** @type {?} */ MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MomentDateModule = /** @class */ (function () {\n    function MomentDateModule() {\n    }\n    MomentDateModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        {\n                            provide: DateAdapter,\n                            useClass: MomentDateAdapter,\n                            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                        }\n                    ],\n                },] },\n    ];\n    return MomentDateModule;\n}());\nvar ɵ0 = MAT_MOMENT_DATE_FORMATS;\nvar MatMomentDateModule = /** @class */ (function () {\n    function MatMomentDateModule() {\n    }\n    MatMomentDateModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MomentDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }],\n                },] },\n    ];\n    return MatMomentDateModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MomentDateModule, MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MomentDateAdapter, MAT_MOMENT_DATE_FORMATS };\n//# sourceMappingURL=material-moment-adapter.es5.js.map\n","import { Observable } from 'rxjs';\nimport { debounceTime } from '../../operator/debounceTime';\nObservable.prototype.debounceTime = debounceTime;\n//# sourceMappingURL=debounceTime.js.map","import { Observable } from 'rxjs';\nimport { distinctUntilChanged } from '../../operator/distinctUntilChanged';\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map","import { Observable } from 'rxjs';\nimport { switchMap } from '../../operator/switchMap';\nObservable.prototype.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map","import { asyncScheduler } from 'rxjs';\nimport { debounceTime as higherOrder } from 'rxjs/operators';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return higherOrder(dueTime, scheduler)(this);\n}\n//# sourceMappingURL=debounceTime.js.map","import { distinctUntilChanged as higherOrder } from 'rxjs/operators';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return higherOrder(compare, keySelector)(this);\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { switchMap as higherOrderSwitchMap } from 'rxjs/operators';\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project) {\n    return higherOrderSwitchMap(project)(this);\n}\n//# sourceMappingURL=switchMap.js.map","import { Directive, ElementRef, HostListener } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[postiveNumberOnly]\"\r\n})\r\nexport class PositiveNumberOnly {\r\n  // Allow positive number greater than 0\r\n  private regex: RegExp = new RegExp(/^[+]?([1-9]+(?:[1-9]*)?|\\.[1-9]+)$/);\r\n  // Allow key codes for special events. Reflect :\r\n  // Backspace, tab, end, home\r\n  private specialKeys: Array<string> = [\"Backspace\", \"Tab\", \"End\", \"Home\"];\r\n\r\n  constructor(private el: ElementRef) {}\r\n  @HostListener(\"keydown\", [\"$event\"])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    // Allow Backspace, tab, end, and home keys\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n    let current: string = this.el.nativeElement.value;\r\n    let next: string = current.concat(event.key);\r\n    if (next && !String(next).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ProductFilterTableComponent } from \"./product-filter-table/product-filter-table.component\";\r\nimport { RouterModule } from \"../../../../node_modules/@angular/router\";\r\nimport { ProductCrudRouts } from \"./product-crud.routing\";\r\nimport {\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatAutocompleteModule\r\n} from \"../../../../node_modules/@angular/material\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { ProductCrudService } from \"./product-crud.service\";\r\nimport { ProductCrudPopupComponent } from \"./product-filter-table/product-crud-popup/product-crud-popup.component\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { CrudService } from \"../cruds/crud.service\";\r\nimport { PositiveNumberOnly } from \"../../directives/PositiveNumber.directive\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    NgxDatatableModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatAutocompleteModule,\r\n    RouterModule.forChild(ProductCrudRouts)\r\n  ],\r\n  declarations: [\r\n    ProductFilterTableComponent,\r\n    ProductCrudPopupComponent,\r\n    PositiveNumberOnly\r\n  ],\r\n  providers: [ProductCrudService, CrudService],\r\n  entryComponents: [ProductCrudPopupComponent]\r\n})\r\nexport class ProductCrudModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ProductFilterTableComponent } from './product-filter-table/product-filter-table.component';\r\n\r\nexport const ProductCrudRouts: Routes = [\r\n    {\r\n        path: 'show',\r\n        component: ProductFilterTableComponent,\r\n        data: { title: 'Product Section', breadcrumb: 'Product' }\r\n    }\r\n];","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"../../../../node_modules/@angular/common/http\";\r\nimport {\r\n  catchError,\r\n  map,\r\n  delay\r\n} from \"../../../../node_modules/rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { _throw } from \"rxjs/Observable/throw\";\r\n\r\nimport { of } from \"../../../../node_modules/rxjs\";\r\n\r\n@Injectable()\r\nexport class ProductCrudService {\r\n  productApiUrl: string = environment.baseApiURL + \"products/\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  updateProduct(id, item) {\r\n    return this.http\r\n      .put<any>(this.productApiUrl + id, item, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addProduct(productObj, items): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.productApiUrl, productObj, this.httpOptions)\r\n      .pipe(\r\n        map(data => {\r\n          items.unshift(data.content);\r\n          return items.slice();\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllProducts(): Observable<any> {\r\n    return this.http.get(this.productApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeProduct(row, items): Observable<any> {\r\n    return this.http.delete(this.productApiUrl + row.id, this.httpOptions).pipe(\r\n      map(data => {\r\n        let i = items.indexOf(row);\r\n        return items.splice(i, 1);\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    //console.log(error)\r\n    return _throw(error);\r\n  }\r\n}\r\n","module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\r\\n<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n\\r\\n    <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <mat-select [formControl]=\\\"productForm.controls['client']\\\" required placeholder=\\\"Select a Client\\\">\\r\\n          <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client\\\">\\r\\n            {{client.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput [formControl]=\\\"productForm.controls['code']\\\" required name=\\\"proCode\\\" placeholder=\\\"Product Code\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput [formControl]=\\\"productForm.controls['name']\\\" required name=\\\"name\\\" placeholder=\\\"Product Name\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"34\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"desc\\\" [formControl]=\\\"productForm.controls['description']\\\" required name=\\\"description\\\" placeholder=\\\"Description\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"batchNumber\\\" [formControl]=\\\"productForm.controls['batchNumber']\\\" required placeholder=\\\"Batch Number\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input type=\\\"number\\\" matInput name=\\\"quantity\\\" [formControl]=\\\"productForm.controls['quantity']\\\" min=\\\"1\\\" postiveNumberOnly\\r\\n          required placeholder=\\\"Quantity\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex=\\\"33\\\" class=\\\"pr-1\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"expireDate\\\" [matDatepicker]=\\\"picker\\\" [formControl]=\\\"productForm.controls['expireDate']\\\" required placeholder=\\\"Expire Date\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n          <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n        </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"productForm.invalid\\\">Save</button>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialogRef,\r\n  MAT_DATE_FORMATS,\r\n  DateAdapter,\r\n  MAT_DATE_LOCALE\r\n} from \"../../../../../../node_modules/@angular/material\";\r\nimport { CrudService } from \"../../../cruds/crud.service\";\r\nimport { Subscription } from \"../../../../../../node_modules/rxjs\";\r\nimport { ResponseModel } from \"../../../../model/ResponseModel.model\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\n\r\n\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\nimport 'rxjs/add/operator/switchMap';\r\nimport { startWith, map } from \"../../../../../../node_modules/rxjs/operators\";\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"YYYY-MM-DD\"\r\n  },\r\n  display: {\r\n    dateInput: \"YYYY-MM-DD\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"YYYY-MM-DD\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: \"app-product-crud-popup\",\r\n  templateUrl: \"./product-crud-popup.component.html\",\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE]\r\n    },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ]\r\n})\r\nexport class ProductCrudPopupComponent implements OnInit {\r\n  public productForm: FormGroup;\r\n  public clients: any[];\r\n  public getClientSub: Subscription;\r\n  public response: ResponseModel;\r\n  public filterOps: Observable<any[]>\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<ProductCrudPopupComponent>,\r\n    private clientService: CrudService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllClients();\r\n    this.buildProductForm(this.data.payload);\r\n    this.getClientSuggestions();\r\n\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.clients.filter(option => {\r\n      console.log(option)\r\n      option.toLowerCase().includes(filterValue)\r\n    });\r\n  }\r\n\r\n  getClientSuggestions(){\r\n    this.getClientSub = this.clientService.getClientSuggestions().subscribe(data =>{\r\n      this.response = data;\r\n      this.clients = this.response.content;\r\n     }) }\r\n\r\n  getAllClients() {\r\n    this.getClientSub = this.clientService.getItems().subscribe(data => {\r\n      this.response = data;\r\n      this.clients = this.response.content;\r\n    });\r\n  }\r\n\r\n  buildProductForm(fieldItem) {\r\n    this.productForm = this.fb.group({\r\n      clientName: [fieldItem.clientName || \"\"],\r\n      client: [fieldItem.client || \"\"],\r\n      code: [fieldItem.code || \"\", Validators.required],\r\n      name: [fieldItem.name || \"\", Validators.required],\r\n      description: [fieldItem.description || \"\", Validators.required],\r\n      batchNumber: [fieldItem.batchNumber || \"\", Validators.required],\r\n      quantity: [fieldItem.quantity || \"\", Validators.required],\r\n      expireDate: [fieldItem.expireDate || \"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.productForm.value);\r\n  }\r\n}\r\n","module.exports = \"<mat-form-field class=\\\"margin-333\\\" style=\\\"width: 99%\\\">\\r\\n  <input matInput placeholder=\\\"Type to filter all columns\\\" value=\\\"\\\" (keyup)='updateFilter($event)'>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"m-333\\\">\\r\\n  <!-- <span fxFlex></span> -->\\r\\n  <button mat-raised-button class=\\\"mb-05\\\" color=\\\"primary\\\" (click)=\\\"openProductPopup({}, true)\\\">Add Product</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\r\\n  <mat-card-content class=\\\"p-0\\\">\\r\\n    <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\" [rows]=\\\"rows\\\" [columns]=\\\"\\\">\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Client\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.client.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Product Code\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.code }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Product Name\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.name }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Description\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.description }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Batch Number\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.batchNumber }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Quantity\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.quantity }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Expire Date\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          {{ row?.expireDate }}\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n\\r\\n      <ngx-datatable-column name=\\\"Actions\\\" [flexGrow]=\\\"1\\\">\\r\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\" (click)=\\\"openProductPopup(row)\\\"><mat-icon>edit</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button color=\\\"warn\\\" class=\\\"mr-1\\\" (click)=\\\"deleteProduct(row)\\\"><mat-icon>delete</mat-icon></button>\\r\\n          <button mat-icon-button mat-sm-button   (click)=\\\"downloadCsv(row)\\\"><mat-icon>file_download</mat-icon></button>\\r\\n        </ng-template>\\r\\n      </ngx-datatable-column>\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { ProductCrudService } from \"../product-crud.service\";\r\nimport {\r\n  MatDialogRef,\r\n  MatDialog,\r\n  DateAdapter\r\n} from \"../../../../../node_modules/@angular/material\";\r\nimport { ProductCrudPopupComponent } from \"./product-crud-popup/product-crud-popup.component\";\r\n\r\nimport { AppLoaderService } from \"../../../shared/services/app-loader/app-loader.service\";\r\nimport { AppErrorService } from \"../../../shared/services/app-error/app-error.service\";\r\nimport { Subscription } from \"../../../../../node_modules/rxjs\";\r\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\r\nimport { AppConfirmService } from \"../../../shared/services/app-confirm/app-confirm.service\";\r\n\r\nimport * as moment from \"moment\";\r\nimport { AppFileDownloadService } from \"../../../shared/services/file-download.service\";\r\nimport { AppDataConversionService } from '../../../shared/services/data-conversion.service';\r\n\r\n@Component({\r\n  selector: \"app-product-filter-table\",\r\n  templateUrl: \"./product-filter-table.component.html\",\r\n  animations: egretAnimations\r\n})\r\nexport class ProductFilterTableComponent implements OnInit, OnDestroy {\r\n  rows: any[];\r\n  columns = [];\r\n  temp = [];\r\n  public getProductsSub: Subscription;\r\n\r\n  constructor(\r\n    private prodService: ProductCrudService,\r\n    private dialog: MatDialog,\r\n    private loader: AppLoaderService,\r\n    private errDialog: AppErrorService,\r\n    private confirmService: AppConfirmService,\r\n    private downloadService: AppFileDownloadService,\r\n    private conversionService : AppDataConversionService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllProduct();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getProductsSub) {\r\n      this.getProductsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  downloadCsv(selectedRow) {\r\n    const fileName  =  selectedRow.name + '_' + selectedRow.code + '_' + selectedRow.batchNumber;\r\n    const csvData =  this.conversionService.convertToCsv(selectedRow.productDetails);\r\n    this.downloadService.downloadFile({ name: fileName, type : 'csv' , data : csvData });\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    let columns = Object.keys(this.temp[0]);\r\n    columns.splice(columns.length - 1);\r\n\r\n    if (!columns.length) return;\r\n\r\n    const rows = this.temp.filter(function(data) {\r\n      for (let i = 0; i <= columns.length; i++) {\r\n        let column = columns[i];\r\n        if (\r\n          data[column] &&\r\n          data[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(val) > -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    this.rows = rows;\r\n  }\r\n\r\n  getAllProduct() {\r\n    this.getProductsSub = this.prodService.getAllProducts().subscribe(\r\n      successResp => {\r\n        this.rows = this.temp = successResp.content;\r\n      },\r\n      error => {\r\n        this.loader.close();\r\n        console.log(error);\r\n        console.log(error.status);\r\n        this.errDialog.showError({\r\n          title: \"Error\",\r\n          status: error.status,\r\n          type: \"http_error\"\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteProduct(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.description}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.prodService.removeProduct(row, this.rows).subscribe(\r\n            data => {\r\n              this.rows = data;\r\n              this.loader.close();\r\n            },\r\n            error => {\r\n              this.loader.close();\r\n              this.errDialog.showError({\r\n                title: \"Error\",\r\n                status: error.status,\r\n                type: \"http_error\"\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openProductPopup(data: any = {}, isNew?) {\r\n    let title = isNew ? \"Add new Product\" : \"Update Product\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      ProductCrudPopupComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: { title: title, payload: data }\r\n      }\r\n    );\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (!res) {\r\n        // if user press cancel.\r\n        return;\r\n      }\r\n      this.loader.open();\r\n\r\n      console.log(\"RES obj :\");\r\n      console.log(res);\r\n\r\n      res.expireDate = moment(res.expireDate).format(\"YYYY-MM-DD\");\r\n\r\n      if (isNew) {\r\n        this.prodService.addProduct(res, this.rows).subscribe(\r\n          data => {\r\n            this.rows = data;\r\n            this.loader.close();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      } else {\r\n        this.prodService.updateProduct(data.id, res).subscribe(\r\n          response => {\r\n            console.log(response.content);\r\n            this.rows = this.rows.map(i => {\r\n              if (i.id === data.id) {\r\n                return Object.assign({}, i, response.content);\r\n              }\r\n              return i;\r\n            });\r\n\r\n            this.loader.close();\r\n            return this.rows.slice();\r\n          },\r\n          error => {\r\n            this.loader.close();\r\n            this.errDialog.showError({\r\n              title: \"Error\",\r\n              status: error.status,\r\n              type: \"http_error\"\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}