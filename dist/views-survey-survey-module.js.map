{"version":3,"sources":["webpack:///./src/app/views/survey/answer-template-popup/answer-template-popup.component.html","webpack:///./src/app/views/survey/answer-template-popup/answer-template-popup.component.ts","webpack:///./src/app/views/survey/survey-builder/survey-builder.component.html","webpack:///./src/app/views/survey/survey-builder/survey-builder.component.ts","webpack:///./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.html","webpack:///./src/app/views/survey/survey-creation-popup/survey-creation-popup.component.ts","webpack:///./src/app/views/survey/survey-setting/survey-setting.component.html","webpack:///./src/app/views/survey/survey-setting/survey-setting.component.ts","webpack:///./src/app/views/survey/survey-table/survey-table.component.html","webpack:///./src/app/views/survey/survey-table/survey-table.component.ts","webpack:///./src/app/views/survey/survey.component.html","webpack:///./src/app/views/survey/survey.component.ts","webpack:///./src/app/views/survey/survey.module.ts","webpack:///./src/app/views/survey/survey.routing.ts"],"names":[],"mappings":"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","file":"views-survey-survey-module.js","sourcesContent":["module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\n<form [formGroup]=\\\"ansTemplateForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  <mat-dialog-content class=\\\"mat-typography\\\">\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\n\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\n        <div class=\\\"text-muted\\\">\\n          Create your answer template by adding template name,type and answers. answers need to have a lable,value and option value\\n        </div>\\n      </div>\\n\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput [formControl]=\\\"ansTemplateForm.controls['name']\\\" required name=\\\"name\\\" placeholder=\\\"Answer template name\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxFlex=\\\"50\\\" class=\\\"pr-1\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput [formControl]=\\\"ansTemplateForm.controls['answerTemplateType']\\\" required name=\\\"answerTemplateType\\\" placeholder=\\\"Answer template type\\\">\\n        </mat-form-field>\\n      </div>\\n\\n\\n\\n      <div fxFlex=\\\"100\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" formArrayName='answers' *ngFor=\\\"let answer of ansTemplateForm.controls['answers'].controls; let i=index\\\">\\n\\n        <mat-card-title>\\n          <small class=\\\"text-muted\\\"> Answer {{i + 1}}</small>\\n        </mat-card-title>\\n\\n        <div [formGroupName]=\\\"i\\\">\\n          <div fxFlex=\\\"25\\\" class=\\\"pr-1\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input matInput formControlName='lable' required name=\\\"lable\\\" placeholder=\\\"Answer lable\\\">\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"25\\\" class=\\\"pr-1\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input matInput formControlName='value' required name=\\\"value\\\" placeholder=\\\"Answer value\\\">\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"25\\\" class=\\\"pr-1\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <input matInput formControlName='option' required name=\\\"option\\\" placeholder=\\\"Answer option\\\">\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"25\\\" class=\\\"pr-1\\\">\\n            <mat-button-toggle  (click)='addAnsTemplate()' value=\\\"add\\\">\\n              <mat-icon>add</mat-icon>\\n            </mat-button-toggle>\\n            <mat-button-toggle *ngIf=\\\"ansTemplateForm.controls['answers'].controls.length > 1\\\" (click)=removeAnsTemplate(i) value=\\\"remove\\\">\\n              <mat-icon>remove</mat-icon>\\n            </mat-button-toggle>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </mat-dialog-content>\\n\\n\\n  <mat-dialog-actions align=\\\"end\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"ansTemplateForm.invalid\\\">Save</button>\\n    <span fxFlex></span>\\n    <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n\\n</form>\\n\"","import { Component, OnInit, Input, Inject } from \"@angular/core\";\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormBuilder, FormArray } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-answer-template-popup\",\n  templateUrl: \"./answer-template-popup.component.html\",\n  animations: egretAnimations\n})\nexport class AnswerTemplatePopupComponent implements OnInit {\n  public ansTemplateForm: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<AnswerTemplatePopupComponent>,\n    public fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.buildAnsTemplateform(this.data.payload);\n    this.hideRemoveButton();\n  }\n\n  buildAnsTemplateform(fieldItem) {\n    this.ansTemplateForm = this.fb.group({\n      name: [fieldItem.name || \"\"],\n      answerTemplateType: [fieldItem.answerTemplateType || \"\"],\n      answers: this.fb.array([this.initAnswerTemplate(fieldItem)])\n    });\n  }\n\n  initAnswerTemplate(fieldItem: any = {}) {\n    return this.fb.group({\n      lable: [\"test\"],\n      value: [\"test\"],\n      option: [\"test\"]\n    });\n  }\n\n  addAnsTemplate() {\n    const answer = <FormArray>this.ansTemplateForm.controls[\"answers\"];\n    answer.push(this.initAnswerTemplate());\n  }\n\n  removeAnsTemplate(index : number) {\n    const answer = <FormArray>this.ansTemplateForm.controls[\"answers\"];\n    answer.removeAt(index);\n  }\n\n  hideRemoveButton() {\n    return this.ansTemplateForm.controls[\"answers\"].value.length > 1;\n  }\n\n  submit() {\n    this.dialogRef.close(this.ansTemplateForm.value);\n  }\n}\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\n  <mat-card-title>\\n    <div class=\\\"card-title-text\\\">Survey Builder</div>\\n    <mat-divider></mat-divider>\\n  </mat-card-title>\\n  <mat-card-content class=\\\"p-0\\\">\\n    <div class=\\\"text-muted mb-1 m-1 text-left\\\">\\n      you can setup survey question as you want & specify answers by using predefined answer templates.\\n    </div>\\n    <div class=\\\"profile-actions text-right mb-1\\\">\\n      <div class=\\\"m-333 text-right\\\">\\n        <button mat-raised-button class=\\\"mb-05\\\" color=\\\"accent\\\">Add Question</button>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\nimport { LayoutService } from \"../../../shared/services/layout.service\";\n\n@Component({\n  selector: \"app-survey-builder\",\n  templateUrl: \"./survey-builder.component.html\",\n  animations: egretAnimations\n})\nexport class SurveyBuilderComponent implements OnInit {\n  public isSideNavOpen: boolean = false;\n  public layoutConf: any;\n\n  constructor() {}\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"<h1 matDialogTitle>{{data.title}}</h1>\\n\\n<form [formGroup]=\\\"surveyForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  <mat-dialog-content class=\\\"mat-typography\\\">\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutWrap=\\\"wrap\\\">\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput [formControl]=\\\"surveyForm.controls['name']\\\" required name=\\\"name\\\" placeholder=\\\"Survey name\\\">\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [formControl]=\\\"surveyForm.controls['surveyType']\\\" required placeholder=\\\"Survey Type\\\" [(value)]=\\\"surveyForm.controls['surveyType'].value\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option value=\\\"product\\\">Product Survey</mat-option>\\n            <mat-option value=\\\"evote\\\">Evote Survey</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n  </mat-dialog-content>\\n\\n\\n  <mat-dialog-actions align=\\\"end\\\">\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/surveys/builder_v1\\\" [disabled]=\\\"surveyForm.invalid\\\">Save</button>\\n    <span fxFlex></span>\\n    <button mat-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\\n\"","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { LayoutService } from '../../../shared/services/layout.service';\n\n@Component({\n  selector: \"app-survey-creation-popup\",\n  templateUrl: \"./survey-creation-popup.component.html\",\n  animations: egretAnimations\n})\nexport class SurveyCreationPopupComponent implements OnInit {\n  public surveyForm: FormGroup;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<SurveyCreationPopupComponent>,\n    private layout: LayoutService\n  ) {}\n\n  ngOnInit() {\n    this.buildSurveyForm(this.data.payload);\n  }\n\n  buildSurveyForm(fieldItem) {\n    this.surveyForm = this.fb.group({\n      name: [fieldItem.name || \"\"],\n      surveyType : [fieldItem.name || \"\"]\n    });\n  }\n\n  submit(){\n    this.layout.publishLayoutChange({\n      sidebarStyle: \"closed\"\n    });\n    this.dialogRef.close(this.surveyForm.value);\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\n  <mat-card-title>\\n    <div class=\\\"card-title-text\\\">Survey Settings</div>\\n    <mat-divider></mat-divider>\\n  </mat-card-title>\\n  <mat-card-content class=\\\"p-0\\\">\\n    <div class=\\\"text-muted mb-1 m-1 text-left\\\">\\n      you can configure your survey question answer with adding different options per answer. To setup your predefined answer template,\\n      navigate to \\\"Answser template section \\\" by clicking \\\"Create Answer template\\\" button.\\n    </div>\\n    <div class=\\\"profile-actions text-right mb-1\\\">\\n      <div class=\\\"m-333 text-right\\\">\\n        <button mat-raised-button (click)=\\\"openAnswerTemplatePopup({},true)\\\" class=\\\"mb-05\\\" color=\\\"accent\\\">Create Answer template</button>\\n      </div>\\n    </div>\\n\\n    <mat-divider></mat-divider>\\n\\n    <mat-accordion>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Answer templates\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            View or Edit Predefined Answer template\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n\\n        <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n          [limit]=\\\"5\\\" [rows]=\\\"answerTemplates\\\">\\n\\n          <ngx-datatable-column name=\\\"Template Name\\\" [flexGrow]=\\\"1\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row?.name}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Answer type\\\" [flexGrow]=\\\"1\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row?.type}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Action\\\" [flexGrow]=\\\"1\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\"><mat-icon>edit</mat-icon></button>\\n            </ng-template>\\n          </ngx-datatable-column>\\n        </ngx-datatable>\\n\\n\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\nimport { MatDialog, MatDialogRef } from \"@angular/material\";\nimport { AnswerTemplatePopupComponent } from \"../answer-template-popup/answer-template-popup.component\";\n\n@Component({\n  selector: \"app-survey-setting\",\n  templateUrl: \"./survey-setting.component.html\",\n  animations: egretAnimations\n})\nexport class SurveySettingComponent implements OnInit {\n  constructor(private dialog: MatDialog) {}\n\n  answerTemplates = [\n    {\n      name: \"Dichotomous Survey Questions\",\n      type: \"Yes/No\"\n    },\n    {\n      name: \"Multiple Choice answers\",\n      type: \"mcq\"\n    }\n  ];\n\n  ngOnInit() {}\n\n  openAnswerTemplatePopup(data: any = {}, isNew?) {\n    let title = isNew ? \"Add New Answer Template \" : \"Update Answer Template \";\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\n      AnswerTemplatePopupComponent,\n      {\n        width: \"720px\",\n        disableClose: true,\n        data: { title: title, payload: data }\n      }\n    );\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (!res) {\n        return;\n      }\n\n      console.log(\"input : \");\n\n      console.log(JSON.stringify(res));\n    });\n  }\n}\n","module.exports = \"<mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\" >\\n  <mat-card-title>\\n    <div class=\\\"card-title-text\\\">Survey Summary</div>\\n    <mat-divider></mat-divider>\\n\\n    <div class=\\\"profile-actions text-right mb-1\\\">\\n        <div class=\\\"m-333\\\">\\n          <button mat-raised-button class=\\\"mb-05\\\" (click)='openSurveyPopup({},true)' color=\\\"primary\\\">Add Survey</button>\\n        </div>\\n      </div>\\n\\n\\n  </mat-card-title>\\n  <mat-card-content class=\\\"p-0\\\">\\n    <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n      [limit]=\\\"5\\\" [rows]=\\\"surveyData\\\">\\n      <ngx-datatable-column name=\\\"Survey Topic\\\" [flexGrow]=\\\"1\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row?.topic}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Survey Type\\\" [flexGrow]=\\\"1\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row?.type}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Survey Source\\\" [flexGrow]=\\\"1\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row?.source}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Start Date\\\" [flexGrow]=\\\"1\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row?.start}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"End Date\\\" [flexGrow]=\\\"1\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row?.end}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\" [flexGrow]=\\\"1\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <button mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\"><mat-icon>edit</mat-icon></button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n\\n\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { egretAnimations } from '../../../shared/animations/egret-animations';\nimport { SurveyCreationPopupComponent } from '../survey-creation-popup/survey-creation-popup.component';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { LayoutService } from '../../../shared/services/layout.service';\n\n@Component({\n  selector: 'app-survey-table',\n  templateUrl: './survey-table.component.html',\n  animations : egretAnimations\n})\nexport class SurveyTableComponent implements OnInit {\n\n  constructor(private dialog : MatDialog) { }\n\n  surveyData = [{\n    topic: 'Addidas Air Survey',\n    type: 'Product Survey',\n    source: 'Addidas Air XD1',\n    start: '2018/04/10',\n    end: '2018/05/10'\n  }, {\n    topic: 'Addidas Air Survey',\n    type: 'Product Survey',\n    source: 'Addidas Air XD1',\n    start: '2018/04/10',\n    end: '2018/05/10'\n  }, {\n    topic: 'Addidas Air Survey',\n    type: 'Product Survey',\n    source: 'Addidas Air XD1',\n    start: '2018/04/10',\n    end: '2018/05/10'\n  }, {\n    topic: 'Addidas Air Survey',\n    type: 'Product Survey',\n    source: 'Addidas Air XD1',\n    start: '2018/04/10',\n    end: '2018/05/10'\n  }, {\n    topic: 'Addidas Air Survey',\n    type: 'Product Survey',\n    source: 'Addidas Air XD1',\n    start: '2018/04/10',\n    end: '2018/05/10'\n  }];\n  ngOnInit() {\n  }\n\n  openSurveyPopup(data : any = {},isNew?){\n    let title = isNew ? 'Add New Survey ' : 'Update Survey ';\n    let dialogRef : MatDialogRef<any> = this.dialog.open(\n      SurveyCreationPopupComponent,\n      {\n        width: \"720px\",\n        disableClose: true,\n        data: { title: title, payload: data }\n      }\n    );\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (!res) {\n        return;\n      }\n\n      console.log(\"input : \");\n      console.log(JSON.stringify(res));\n    });\n\n\n  }\n\n}\n","module.exports = \"\\n<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\n      <div class=\\\"propic text-center\\\">\\n        <img src=\\\"assets/images/survey-icon.jpg\\\" alt=\\\"\\\">\\n      </div>\\n      <div class=\\\"profile-title text-center mb-1\\\">\\n        <div class=\\\"main-title\\\">Survey Service</div>\\n        <div class=\\\"subtitle mb-05\\\">Clear Picture Authentica</div>\\n        <div class=\\\"text-muted\\\"> Provides the tools you need to easily create questionnaires.</div>\\n      </div>\\n\\n      <div class=\\\"profile-nav\\\">\\n        <mat-nav-list>\\n          <mat-list-item routerLink=\\\"/surveys/summery\\\" routerLinkActive=\\\"list-item-active\\\">\\n            <mat-icon>home</mat-icon>\\n            Survey Summary\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item routerLink=\\\"/surveys/setting\\\" routerLinkActive=\\\"list-item-active\\\">\\n            <mat-icon>settings</mat-icon>\\n            Survey Settings\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item routerLink=\\\"/surveys/builder_v1\\\" routerLinkActive=\\\"list-item-active\\\">\\n            <mat-icon>settings</mat-icon>\\n            Survey bUILDER\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n        </mat-nav-list>\\n      </div>\\n    </mat-card>\\n\\n\\n\\n  </div>\\n\\n<!-- Profile Views -->\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-md=\\\"calc(100% - 300px)\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { egretAnimations } from '../../shared/animations/egret-animations';\n\n\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  animations: egretAnimations\n})\nexport class SurveyComponent implements OnInit {\n\n constructor() { }\n\n  ngOnInit() {\n  }\n\n\n\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SurveyComponent } from \"./survey.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { SurveyRoute } from \"./survey.routing\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  MatInputModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatIconModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatListModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatDialogActions,\n  MatSidenavModule,\n  MatSlideToggleModule,\n\n} from \"@angular/material\";\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\nimport { SurveyTableComponent } from \"./survey-table/survey-table.component\";\nimport { SurveySettingComponent } from \"./survey-setting/survey-setting.component\";\nimport { AnswerTemplatePopupComponent } from \"./answer-template-popup/answer-template-popup.component\";\nimport { SurveyCreationPopupComponent } from \"./survey-creation-popup/survey-creation-popup.component\";\nimport { SurveyBuilderComponent } from \"./survey-builder/survey-builder.component\";\nimport { LayoutService } from \"../../shared/services/layout.service\";\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    NgxDatatableModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatListModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatSidenavModule,\n    RouterModule.forChild(SurveyRoute),\n    SharedModule,\n    MatSlideToggleModule\n\n  ],\n  declarations: [\n    SurveyComponent,\n    SurveyTableComponent,\n    SurveySettingComponent,\n    AnswerTemplatePopupComponent,\n    SurveyCreationPopupComponent,\n    SurveyBuilderComponent\n  ],\n  entryComponents: [AnswerTemplatePopupComponent, SurveyCreationPopupComponent],\n  providers: []\n})\nexport class SurveyModule {}\n","import { Routes } from \"@angular/router\";\r\nimport { SurveyComponent } from \"./survey.component\";\r\nimport { SurveyTableComponent } from \"./survey-table/survey-table.component\";\r\nimport { SurveySettingComponent } from \"./survey-setting/survey-setting.component\";\r\nimport { SurveyBuilderComponent } from \"./survey-builder/survey-builder.component\";\r\n\r\nexport const SurveyRoute: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: SurveyComponent,\r\n    children: [\r\n      {\r\n        path: \"summery\",\r\n        component: SurveyTableComponent,\r\n        data: { title: \"Survey Summary\", breadcrumb: \"Summary\" }\r\n      },\r\n      {\r\n        path: \"setting\",\r\n        component: SurveySettingComponent,\r\n        data: { title: \"Survey Setting\", breadcrumb: \"Setting\" }\r\n      },\r\n      {\r\n        path: \"builder_v1\",\r\n        component: SurveyBuilderComponent,\r\n        data: { title: \"Survey Builder\", breadcrumb: \"Builder\" }\r\n      }\r\n    ]\r\n  }\r\n];\r\n"],"sourceRoot":""}