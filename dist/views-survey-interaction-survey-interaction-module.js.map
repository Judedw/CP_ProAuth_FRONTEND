{"version":3,"sources":["webpack:///./src/app/shared/animations/egret-animations.ts","webpack:///./src/app/views/survey-interaction/survey-interaction.component.html","webpack:///./src/app/views/survey-interaction/survey-interaction.component.ts","webpack:///./src/app/views/survey-interaction/survey-interaction.module.ts","webpack:///./src/app/views/survey-interaction/survey-interaction.routing.ts","webpack:///./src/app/views/survey-interaction/survey-interaction.service.ts","webpack:///./src/app/views/survey-interaction/survey-viewer/survey-viewer.component.html","webpack:///./src/app/views/survey-interaction/survey-viewer/survey-viewer.component.ts","webpack:///./src/app/views/survey/survey.service.ts","webpack:///./src/environments/environment.prod.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAa6B;AAE7B,IAAM,QAAQ,GAAG,qEAAS,CAAC;IAC1B,iEAAK,CAAC;QACL,OAAO,EAAE,aAAa;QACtB,SAAS,EAAE,mDAAmD;KAC9D,CAAC;IACF,mEAAO,CAAC,uDAAuD,EAAE,iEAAK,CAAC,GAAG,CAAC,CAAC;CAC5E,EAAE;IACD,MAAM,EAAE;QACP,QAAQ,EAAE,OAAO;QACjB,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,GAAG;QACZ,KAAK,EAAE,GAAG;QACV,CAAC,EAAE,GAAG;QACN,CAAC,EAAE,GAAG;QACN,CAAC,EAAE,GAAG;KACN;CACD,CAAC,CAAC;AAEG,IAAM,eAAe,GAAG;IAC9B,mEAAO,CAAC,SAAS,EAAE,CAAC,sEAAU,CAAC,WAAW,EAAE,CAAC,wEAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAExE,mEAAO,CAAC,WAAW,EAAE;QACpB,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC;YACf,OAAO,EAAE,CAAC;YACV,OAAO,EAAI,MAAM;SAClB,CAAC,CAAC;QACH,iEAAK,CAAC,GAAG,EAAE,iEAAK,CAAC;YACf,OAAO,EAAE,CAAC;YACV,OAAO,EAAI,OAAO;SACnB,CAAC,CAAC;QACH,sEAAU,CAAC,QAAQ,EAAE,mEAAO,CAAC,OAAO,CAAC,CAAC;QACtC,sEAAU,CAAC,QAAQ,EAAE,mEAAO,CAAC,OAAO,CAAC,CAAC;KACtC,CAAC;CACD;;;;;;;;;;;;AChDD,44CAA44C,kBAAkB,wBAAwB,+TAA+T,2hBAA2hB,YAAY,+tBAA+tB,SAAS,GAAG,WAAW,GAAG,gDAAgD,qW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxgG;AACc;AAKrC;AACmB;AAC8B;AACH;AAOpF;IAKE,oCACU,kBAA4C,EAC5C,aAA4B,EAC5B,MAAwB,EACxB,SAA0B;QAH1B,uBAAkB,GAAlB,kBAAkB,CAA0B;QAC5C,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAkB;QACxB,cAAS,GAAT,SAAS,CAAiB;IACjC,CAAC;IAEJ,6CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,gDAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACrC,CAAC;IACH,CAAC;IAED,iDAAY,GAAZ;QAAA,iBAcC;QAbC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,SAAS,CACjE,qBAAW;YACT,KAAI,CAAC,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC;QACxC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBACvB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;IApCU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;YAElC,UAAU,EAAE,mFAAe;SAC5B,CAAC;yCAO8B,oFAAwB;YAC7B,oEAAa;YACpB,+FAAgB;YACb,4FAAe;OATzB,0BAA0B,CAqCtC;IAAD,iCAAC;CAAA;AArCsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AAC6B;AAC7B;AACwB;AACf;AACH;AAgB1B;AACkC;AACH;AACD;AACe;AACpB;AACsB;AACZ;AACkB;AA6BhF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QA3BnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAgB;gBAChB,kEAAmB;gBACnB,gEAAc;gBACd,0EAAkB;gBAClB,iEAAe;gBACf,+DAAa;gBACb,iEAAe;gBACf,iEAAe;gBACf,kEAAY;gBACZ,kEAAgB;gBAChB,4DAAY;gBACZ,+DAAa;gBACb,kEAAgB;gBAChB,oEAAkB;gBAClB,uEAAqB;gBACrB,kEAAgB;gBAChB,+DAAa;gBACb,gEAAc;gBACd,kEAAgB;gBAChB,gEAAc;gBACd,4DAAY,CAAC,QAAQ,CAAC,mFAAuB,CAAC;aAC/C;YACD,YAAY,EAAE,CAAC,wFAA0B,EAAE,6FAAqB,CAAC;YACjE,SAAS,EAAE,CAAC,qFAAwB,EAAE,qEAAa,EAAE,gEAAW,EAAC,sFAAkB,EAAC,0EAAY,CAAC;SAClG,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;AC1DwC;AACI;AAEzE,IAAM,uBAAuB,GAAW;IAC7C;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wFAA0B;QACrC,cAAc;QACd,MAAM;QACN,0BAA0B;QAC1B,wCAAwC;QACxC,yEAAyE;QACzE,MAAM;QACN,IAAI;KACL;IACD;QACE,IAAI,EAAE,gCAAgC;QACtC,SAAS,EAAE,4FAAqB;KACjC;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpByC;AAE+B;AACZ;AACV;AAGpD;IAGE,kCACU,WAA+B,EAC/B,YAA0B,EAC1B,aAA0B;QAF1B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAa;IACjC,CAAC;IAPO,wBAAwB;QADpC,gEAAU,EAAE;yCAKY,qFAAkB;YACjB,yEAAY;YACX,+DAAW;OANzB,wBAAwB,CAQpC;IAAD,+BAAC;CAAA;AARoC;AAUrC;IACE,2BACS,EAAE,EACF,KAAK,EACL,MAAc,EACd,MAAW;QAHX,OAAE,GAAF,EAAE;QACF,UAAK,GAAL,KAAK;QACL,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAK;IACjB,CAAC;IACN,wBAAC;AAAD,CAAC;;AAED;IACE,sBACS,UAAU,EACV,KAAK,EACL,SAAiB,EACjB,MAAW;QAHX,eAAU,GAAV,UAAU;QACV,UAAK,GAAL,KAAK;QACL,cAAS,GAAT,SAAS,CAAQ;QACjB,WAAM,GAAN,MAAM,CAAK;IACjB,CAAC;IACN,mBAAC;AAAD,CAAC;;AAED;IACE,yBAAmB,KAAK,EAAS,IAAY,EAAS,SAAc;QAAjD,UAAK,GAAL,KAAK;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAK;IAAG,CAAC;IAC1E,sBAAC;AAAD,CAAC;;AAED;IACE,uBAAmB,EAAE,EAAS,IAAY,EAAS,cAAmB;QAAnD,OAAE,GAAF,EAAE;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAK;IAAG,CAAC;IAC5E,oBAAC;AAAD,CAAC;;;;;;;;;;;;;ACzCD,0aAA0a,kBAAkB,wMAAwM,iBAAiB,gEAAgE,YAAY,2HAA2H,kBAAkB,4BAA4B,4BAA4B,gBAAgB,+QAA+Q,oBAAoB,gXAAgX,oJAAoJ,qBAAqB,+YAA+Y,gQAAgQ,2BAA2B,0SAA0S,kJAAkJ,2BAA2B,6QAA6Q,8G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnkG;AACZ;AAC6B;AACD;AACZ;AACV;AAKhB;AACqB;AACoB;AAShF;IAUE,+BACU,KAAqB,EACrB,WAA+B,EAC/B,YAA0B,EAC1B,aAA0B,EAC1B,aAA4B,EAC5B,EAAe;QALf,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAa;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAa;QAfzB,iBAAY,GAAU,EAAE,CAAC;QACzB,kBAAa,GAAU,EAAE,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;IAcvB,CAAC;IAEJ,wCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAEvD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACzC,CAAC;YACD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACvC,CAAC;YAED,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,kDAAkB,GAAlB;QAAA,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa;aAC7C,kBAAkB,EAAE;aACpB,SAAS,CAAC,qBAAW;YACpB,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAgB,GAAhB,UAAiB,SAAS;QAA1B,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,qBAAW;YAC9D,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;YAClC,KAAI,CAAC,aAAa,CAChB,OAAO,CAAC,MAAM,CAAC,EAAE,EACjB,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,WAAW,CACpB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAc,GAAd,UAAe,OAAO;QAAtB,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,mBAAS;YACzD,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC;YAC9B,KAAI,CAAC,aAAa,CAChB,KAAK,CAAC,QAAQ,EACd,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,SAAS,CAChB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAa,GAAb,UAAc,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW;QAA5D,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,mBAAS;YAC5D,IAAI,QAAQ,GAAG,WAAW;gBACxB,CAAC,CAAC,uCAAuC;gBACzC,CAAC,CAAC,WAAW,CAAC;YAEhB,KAAI,CAAC,YAAY,CAAC,OAAO,CACvB,IAAI,wEAAY,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,CACvE,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAiB,GAAjB,UAAkB,QAAQ;QAA1B,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,oBAAU;YAC7D,KAAI,CAAC,aAAa,CAAC,OAAO,CACxB,IAAI,2EAAe,CACjB,UAAU,CAAC,KAAK,EAChB,UAAU,CAAC,IAAI,EACf,UAAU,CAAC,SAAS,CACrB,CACF,CAAC;YACF,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX,UAAY,EAAE;QAAd,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC1D,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,sEAAsE;QACtE,4CAA4C;QAC5C,uCAAuC;QACvC,MAAM;IACR,CAAC;IAED,4CAAY,GAAZ,UAAa,QAAQ,EAAE,SAAS;QAAhC,iBA4BC;QA3BC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAEjC,IAAI,WAAW,GAAc,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAc,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAE3C,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,QAAQ,EAAE,IAAI,0DAAW,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,WAAW;SACvB,CAAC,CAAC;QAEH,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,MAAM;YAC3C,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAE3B,KAAI,CAAC,aAAa;iBACf,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;iBAC9C,SAAS,CAAC,kBAAQ;gBACjB,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;gBACjD,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,QAAQ;oBAChD,OAAO,CAAC,GAAG,CAAC,UAAU,GAAE,MAAM,CAAC,CAAC;oBAChC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX,UAAY,WAAW;QACrB,IAAI,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC;QACxB,IAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,YAAY,GAAG,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAE,CAAC,IAAI,CACzD,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,YAAY,CAAC,CACpD,CAAC;IACJ,CAAC;IAED,8CAAc,GAAd,UAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAC,YAAY;QAC3C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YAClB,OAAO,EAAE,OAAO;YAChB,YAAY,EAAG,YAAY;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,yCAAS,GAAT,UAAU,aAAa,EAAE,MAAM,EAAE,WAAW;QAC1C,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACR,CACE,CACE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAE,CAAC,QAAQ,CAC7D,aAAa,CACd,CACD,CAAC,QAAQ,CAAC,SAAS,CAAC,CACtB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,4CAAY,GAAZ,UAAa,EAAE,EAAE,WAAW,EAAE,MAAM;QAClC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,EAAE;YACN,kBAAkB,EAAE,IAAI,0DAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC;YACnE,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,6CAAa,GAAb;QACE,IAAM,GAAG,GAAc,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACjE,IAAM,IAAI,GAAiB,CACb,CACE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAClE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAC7B,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAjMU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;YAE7B,UAAU,EAAE,mFAAe;SAC5B,CAAC;yCAYiB,8DAAc;YACR,qFAAkB;YACjB,yEAAY;YACX,+DAAW;YACX,oEAAa;YACxB,0DAAW;OAhBd,qBAAqB,CAkMjC;IAAD,4BAAC;CAAA;AAlMiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBS;AAKb;AAC8B;AACd;AACG;AAGjD;IAWE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAVpC,iBAAY,GAAW,yEAAW,CAAC,YAAY,CAAC;QAEhD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,8BAA8B,EAC5B,6EAA6E;aAChF,CAAC;SACH,CAAC;IAEqC,CAAC;IAExC,0CAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;aAC5C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,yCAAiB,GAAjB,UAAkB,WAAW,EAAE,KAAK;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,YAAY,GAAG,mBAAmB,EACvC,WAAW,CACZ;aACA,IAAI,CACH,0DAAG,CAAC,cAAI;YACN,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,yCAAiB,GAAjB,UAAkB,EAAE,EAAE,IAAI;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,IAAI,CAAC,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAAE,IAAI,CAAC;aAC5D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,0CAAkB,GAAlB,UAAmB,EAAE,EAAE,KAAM;QAC3B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,GAAG,mBAAmB,GAAG,EAAE,CAAC,CAAC;QAC3E,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,IAAI,CAAC,YAAY,GAAG,mBAAmB,GAAG,EAAE,CAAC;aACtD,IAAI,CACH,0DAAG,CAAC,cAAI;YACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,yCAAiB,GAAjB,UAAkB,GAAG,EAAE,KAAK;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,GAAG,GAAG,CAAC,EAAE,CAAC;aACxD,IAAI,CACH,0DAAG,CAAC,cAAI;YACN,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,oCAAY,GAAZ,UAAa,SAAS,EAAE,KAAK;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,YAAY,GAAG,SAAS,EAAE,SAAS,CAAC,CAAC,IAAI,CACvE,0DAAG,CAAC,cAAI;YACN,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAED,iDAAyB,GAAzB,UAA0B,EAAE,EAAE,IAAI;QAChC,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC;aACnD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,yCAAiB,GAAjB,UAAkB,EAAE,EAAE,IAAI;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC;aACnD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,qCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;aAClC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,oCAAY,GAAZ,UAAa,GAAG,EAAE,KAAK;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CACnE,0DAAG,CAAC,cAAI;YACN,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAED,uCAAe,GAAf,UAAgB,UAAU;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,IAAI,CAAC,YAAY,GAAG,YAAY,GAAG,UAAU,CAAC;aACvD,IAAI,CACH,0DAAG,CAAC,kBAAQ;YACV,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC1B,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,qCAAa,GAAb,UAAc,QAAQ;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC,IAAI,CACvE,0DAAG,CAAC,kBAAQ;YACV,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC1B,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACJ,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAA8B;QAChD,oBAAoB;QACpB,MAAM,CAAC,uDAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAjIU,aAAa;QADzB,gEAAU,EAAE;yCAYe,+DAAU;OAXzB,aAAa,CAkIzB;IAAD,oBAAC;CAAA;AAlIyB;;;;;;;;;;;;;;;ACXnB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE,eAAe;IACvB,mFAAmF;IACnF,mFAAmF;IACnF,+CAA+C;IAC/C,8CAA8C;IAC9C,sCAAsC;IACtC,aAAa,EAAE,0DAA0D;IACzE,YAAY,EAAE,wDAAwD;IACtE,QAAQ,EAAE,sDAAsD;CACjE,CAAC","file":"views-survey-interaction-survey-interaction-module.js","sourcesContent":["import {\r\n\tsequence,\r\n\ttrigger,\r\n\tanimate,\r\n\tstyle,\r\n\tgroup,\r\n\tquery,\r\n\ttransition,\r\n\tanimateChild,\r\n\tstate,\r\n\tanimation,\r\n\tuseAnimation,\r\n\tstagger\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation([\r\n\tstyle({\r\n\t\topacity: '{{opacity}}',\r\n\t\ttransform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\r\n\t}),\r\n\tanimate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\r\n], {\r\n\t\tparams: {\r\n\t\t\tduration: '200ms',\r\n\t\t\tdelay: '0ms',\r\n\t\t\topacity: '0',\r\n\t\t\tscale: '1',\r\n\t\t\tx: '0',\r\n\t\t\ty: '0',\r\n\t\t\tz: '0'\r\n\t\t}\r\n\t});\r\n\r\nexport const egretAnimations = [\r\n\ttrigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\ntrigger('fadeInOut', [\r\n\tstate('0', style({\r\n\t\t\topacity: 0,\r\n\t\t\tdisplay  : 'none'\r\n\t})),\r\n\tstate('1', style({\r\n\t\t\topacity: 1,\r\n\t\t\tdisplay  : 'block'\r\n\t})),\r\n\ttransition('0 => 1', animate('300ms')),\r\n\ttransition('1 => 0', animate('300ms'))\r\n]),\r\n]","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\n      <div class=\\\"propic text-center\\\">\\n        <img src=\\\"assets/images/survey_interaction4.png\\\" alt=\\\"\\\">\\n      </div>\\n      <div class=\\\"profile-title text-center mb-1\\\">\\n        <div class=\\\"main-title\\\">Survey Interaction</div>\\n        <div class=\\\"subtitle mb-05\\\">Clear Picture Authentica</div>\\n        <div class=\\\"text-muted\\\"> Provide the interactions for product authentication & respond to E -Vote by facing\\n          surveys</div>\\n      </div>\\n\\n      <div class=\\\"profile-nav\\\">\\n        <mat-nav-list>\\n          <mat-list-item routerLink=\\\"/survey-interaction\\\" routerLinkActive=\\\"list-item-active\\\">\\n            <mat-icon>explore</mat-icon>\\n            Demo Entrance 1\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item routerLink=\\\"/survey-interaction\\\" routerLinkActive=\\\"list-item-active\\\">\\n            <mat-icon>explore</mat-icon>\\n            Demo Entrance 2\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n\\n        </mat-nav-list>\\n      </div>\\n    </mat-card>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n  <!-- Profile Views -->\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-md=\\\"calc(100% - 300px)\\\">\\n    <mat-card class=\\\"p-0\\\" [@animate]=\\\"{value:'*',params:{y:'50px',delay:'300ms'}}\\\">\\n      <mat-card-title>\\n        <div class=\\\"card-title-text\\\">Survey Catalogue</div>\\n        <mat-divider></mat-divider>\\n\\n        <!-- <div class=\\\"profile-actions text-right mb-1\\\">\\n                <div class=\\\"m-333\\\">\\n                  <button mat-raised-button class=\\\"mb-05\\\" (click)='openSurveyPopup({},true)' color=\\\"primary\\\">Add Survey</button>\\n                </div>\\n              </div> -->\\n\\n\\n      </mat-card-title>\\n      <mat-card-content class=\\\"p-0\\\">\\n        <ngx-datatable class=\\\"material bg-white\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n          [rowHeight]=\\\"'auto'\\\" [limit]=\\\"5\\\" [rows]=\\\"surveyRows\\\">\\n\\n          <ngx-datatable-column name=\\\"Survey Topic\\\" [minWidth]=\\\"250\\\" [flexGrow]=\\\"1\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row?.topic}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n\\n          <ngx-datatable-column name=\\\"Survey Type\\\" [flexGrow]=\\\"1\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <mat-chip *ngIf=\\\"row?.type==='P'\\\" mat-sm-chip color=\\\"primary\\\" [selected]=\\\"true\\\">Product Survey</mat-chip>\\n              <mat-chip *ngIf=\\\"row?.type==='V'\\\" mat-sm-chip color=\\\"accent\\\" [selected]=\\\"true\\\">E-Vote Survey</mat-chip>\\n            </ng-template>\\n          </ngx-datatable-column>\\n\\n\\n          <ngx-datatable-column name=\\\"Action\\\" [flexGrow]=\\\"1\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              <button routerLink=\\\"/survey-interaction/surveyView/{{row?.id}}/{{row?.type}}/{{ row?.type=='P'? row?.productId : row?.voteId }}\\\"\\n                mat-icon-button mat-sm-button color=\\\"primary\\\" class=\\\"mr-1\\\">\\n                <mat-icon>view_headline</mat-icon>\\n              </button>\\n            </ng-template>\\n          </ngx-datatable-column>\\n        </ngx-datatable>\\n\\n\\n      </mat-card-content>\\n    </mat-card>\\n\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { egretAnimations } from \"../../shared/animations/egret-animations\";\nimport { Subscription } from \"rxjs\";\nimport {\n  SurveyInteractionService,\n  SurveyDetailModel\n} from \"./survey-interaction.service\";\nimport { SurveyService } from \"../survey/survey.service\";\nimport { AppLoaderService } from \"../../shared/services/app-loader/app-loader.service\";\nimport { AppErrorService } from \"../../shared/services/app-error/app-error.service\";\n\n@Component({\n  selector: \"app-survey-interaction\",\n  templateUrl: \"./survey-interaction.component.html\",\n  animations: egretAnimations\n})\nexport class SurveyInteractionComponent implements OnInit, OnDestroy {\n  getAllSurveySub: Subscription;\n  surveyRows: any[];\n\n\n  constructor(\n    private interactionService: SurveyInteractionService,\n    private surveyService: SurveyService,\n    private loader: AppLoaderService,\n    private errDialog: AppErrorService\n  ) {}\n\n  ngOnInit() {\n    this.getAllSurvey();\n  }\n\n  ngOnDestroy() {\n    if (this.getAllSurveySub) {\n      this.getAllSurveySub.unsubscribe();\n    }\n  }\n\n  getAllSurvey() {\n    this.getAllSurveySub = this.surveyService.getAllSurveys().subscribe(\n      successResp => {\n        this.surveyRows = successResp.content;\n      },\n      error => {\n        this.loader.close();\n        this.errDialog.showError({\n          title: \"Error\",\n          status: error.status,\n          type: \"http_error\"\n        });\n      }\n    );\n  }\n}\n\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SurveyInteractionComponent } from \"./survey-interaction.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { SurveyInteractionRoutes } from \"./survey-interaction.routing\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  MatInputModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatListModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatIconModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatRadioModule\n} from \"@angular/material\";\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { SurveyService } from \"../survey/survey.service\";\nimport { SurveyInteractionService } from \"./survey-interaction.service\";\nimport { CrudService } from '../cruds/crud.service';\nimport { ProductCrudService } from \"../product-crud/product-crud.service\";\nimport { EvoteService } from '../evote/evote-service.service';\nimport { SurveyViewerComponent } from './survey-viewer/survey-viewer.component';\n\n@NgModule({\n  imports: [\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    NgxDatatableModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSelectModule,\n    SharedModule,\n    MatSidenavModule,\n    CommonModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatRadioModule,\n    RouterModule.forChild(SurveyInteractionRoutes)\n  ],\n  declarations: [SurveyInteractionComponent, SurveyViewerComponent],\n  providers: [SurveyInteractionService, SurveyService, CrudService,ProductCrudService,EvoteService]\n})\nexport class SurveyInteractionModule {}\n","import { Routes } from \"@angular/router\";\r\nimport { SurveyInteractionComponent } from \"./survey-interaction.component\";\r\nimport { SurveyViewerComponent } from \"./survey-viewer/survey-viewer.component\";\r\n\r\nexport const SurveyInteractionRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: SurveyInteractionComponent\r\n    // children: [\r\n    //   {\r\n    //     path: \"surveyView\",\r\n    //     component: SurveyViewerComponent,\r\n    //     data: { title: \"Survey Viewer\", breadcrumb: \"Interaction Viewer\" }\r\n    //   }\r\n    // ]\r\n  },\r\n  {\r\n    path: \"surveyView/:id/:type/:sourceId\",\r\n    component: SurveyViewerComponent\r\n  }\r\n];\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, of } from \"rxjs/\";\r\nimport { ProductCrudService } from \"../product-crud/product-crud.service\";\r\nimport { EvoteService } from \"../evote/evote-service.service\";\r\nimport { CrudService } from \"../cruds/crud.service\";\r\n\r\n@Injectable()\r\nexport class SurveyInteractionService {\r\n  detailInstance: any;\r\n\r\n  constructor(\r\n    private prodService: ProductCrudService,\r\n    private evoteService: EvoteService,\r\n    private clientService: CrudService\r\n  ) {}\r\n}\r\n\r\nexport class SurveyDetailModel {\r\n  constructor(\r\n    public id,\r\n    public topic,\r\n    public source: string,\r\n    public client: any\r\n  ) {}\r\n}\r\n\r\nexport class SourceDetail {\r\n  constructor(\r\n    public sourceName,\r\n    public batch,\r\n    public imageName: string,\r\n    public client: any\r\n  ) {}\r\n}\r\n\r\nexport class SurveyViewModel {\r\n  constructor(public topic, public type: string, public questions: any) {}\r\n}\r\n\r\nexport class QuestionModel {\r\n  constructor(public id, public name: string, public answerTemplate: any) {}\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n\\n  <div fxFlex=\\\"100\\\" *ngFor=\\\"let item of sourceDetail\\\" fxFlex.gt-md=\\\"300px\\\" fxFlex.gt-sm=\\\"50\\\">\\n\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\n      <div class=\\\"app-user\\\">\\n        <div class=\\\"app-user-photo\\\">\\n          <img src=\\\"assets/images/sq-8.jpg\\\" alt=\\\"\\\">\\n        </div>\\n        <span class=\\\"app-user-name mb-05\\\">\\n          {{item.client.name}}\\n        </span>\\n      </div>\\n    </mat-card>\\n\\n\\n\\n    <mat-card class=\\\"profile-sidebar mb-1 pb-0\\\">\\n\\n      <div class=\\\"profile-title text-center mb-1\\\">\\n        <div class=\\\"main-title\\\">{{item.sourceName}} </div>\\n        <div class=\\\"subtitle mb-05\\\">Batch Number : {{item.batch}}</div>\\n      </div>\\n\\n      <div class=\\\"product-photos-wrap\\\">\\n        <div class=\\\"gallery-thumbnails\\\" [@animate]=\\\"{value:'*',params:{delay: '100ms', x:'-100px'}}\\\">\\n          <img src=\\\"{{item.imageName}}\\\" alt=\\\"\\\">\\n        </div>\\n      </div>\\n\\n\\n\\n    </mat-card>\\n  </div>\\n\\n  <div fxFlex=\\\"100\\\" *ngFor=\\\"let surveyRecord of surveyRecords\\\" fxFlex.gt-md=\\\"auto\\\" fxFlex.gt-sm=\\\"50\\\">\\n    <mat-card>\\n      <mat-card-title>\\n        <div class=\\\"card-title-text\\\">{{surveyRecord.topic}}</div>\\n      </mat-card-title>\\n    </mat-card>\\n\\n    <mat-card>\\n      <form [formGroup]=\\\"surveyViewForm\\\">\\n\\n        <input type='hidden' formControlName=\\\"surveyId\\\" required>\\n\\n        <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n\\n          <mat-step formArrayName='questions' *ngFor=\\\"let question of surveyViewForm.controls['questions'].controls; let i=index\\\"\\n            [stepControl]=\\\"surveyViewForm\\\">\\n            <div [formGroupName]=\\\"i\\\">\\n\\n              <ng-template matStepLabel>{{question.value.name}}</ng-template>\\n\\n              <input type=\\\"hidden\\\" formControlName=\\\"id\\\" required>\\n\\n              <div formArrayName='answers' *ngFor=\\\"let ansType of ansTemplates | arrayFilter:question.value.answerTypeId:'answer_types'\\\">\\n                <fieldset id=\\\"id\\\" *ngIf='ansType.answerTemplateType == \\\"S\\\"'>\\n                  <div  *ngFor=\\\"let answer of question.controls['answers'].controls; let j = index\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                      <input *ngIf=\\\"answer.value.answerTemplateType =='S'\\\" name=\\\"id\\\" value='answer.value.answer.value'\\n                        type=\\\"radio\\\" formControlName=\\\"id\\\">{{answer.value.answer.lable}}\\n                    </div>\\n                  </div>\\n                </fieldset>\\n              </div>\\n\\n              <!-- <mat-radio-group formControlName=\\\"id\\\" *ngIf='ansType.answerTemplateType == \\\"S\\\"'>\\n                  <div *ngFor=\\\"let answer of question.controls['answers'].controls; let j = index\\\">\\n                    <div [formGroupName]=\\\"j\\\">\\n                      <mat-radio-button value=\\\"answer.value.answer.value\\\">{{answer.value.answer.lable}}</mat-radio-button>\\n                    </div>\\n                  </div>\\n                </mat-radio-group> -->\\n\\n\\n\\n\\n\\n\\n\\n            </div>\\n\\n\\n          </mat-step>\\n\\n        </mat-vertical-stepper>\\n        <div>\\n          <button (click)='printQuestion();'>Next</button>\\n        </div>\\n      </form>\\n\\n\\n\\n    </mat-card>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { egretAnimations } from \"../../../shared/animations/egret-animations\";\nimport { ProductCrudService } from \"../../product-crud/product-crud.service\";\nimport { EvoteService } from \"../../evote/evote-service.service\";\nimport { CrudService } from \"../../cruds/crud.service\";\nimport {\n  SourceDetail,\n  QuestionModel,\n  SurveyViewModel\n} from \"../survey-interaction.service\";\nimport { SurveyService } from \"../../survey/survey.service\";\nimport { FormGroup, FormBuilder, FormArray, FormControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-survey-viewer\",\n  templateUrl: \"./survey-viewer.component.html\",\n  animations: egretAnimations\n})\nexport class SurveyViewerComponent implements OnInit, OnDestroy {\n  sourceDetail: any[] = [];\n  surveyRecords: any[] = [];\n  isLinear: boolean = false;\n  surveyViewForm: FormGroup;\n\n  getAnswersTemplatesSub: Subscription;\n  ansTemplates: any[];\n  ansTemplate: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private prodService: ProductCrudService,\n    private evoteService: EvoteService,\n    private clientService: CrudService,\n    private surveyService: SurveyService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.getAllAnsTemplates();\n\n    this.route.params.subscribe(params => {\n      console.log(\"passed params \" + JSON.stringify(params));\n\n      if (params.type === \"P\") {\n        this.getProductRecord(params.sourceId);\n      }\n      if (params.type === \"V\") {\n        this.getEvoteRecord(params.sourceId);\n      }\n\n      this.fetchSurveyRecord(params.id);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.getAnswersTemplatesSub) {\n      this.getAnswersTemplatesSub.unsubscribe();\n    }\n  }\n\n  getAllAnsTemplates() {\n    console.log(\"CALLED ANS TEMPLATES \");\n    this.getAnswersTemplatesSub = this.surveyService\n      .getAnswerTemplates()\n      .subscribe(successResp => {\n        this.ansTemplates = successResp.content;\n      });\n  }\n\n  getProductRecord(productId) {\n    this.prodService.getProductById(productId).subscribe(productResp => {\n      let product = productResp.content;\n      this.getClientById(\n        product.client.id,\n        product.name,\n        product.batchNumber,\n        product.imageObject\n      );\n    });\n  }\n\n  getEvoteRecord(evoteId) {\n    this.evoteService.getEvoteById(evoteId).subscribe(evoteResp => {\n      let evote = evoteResp.content;\n      this.getClientById(\n        evote.clientId,\n        evote.topic,\n        evote.batchNumber,\n        evote.imageName\n      );\n    });\n  }\n\n  getClientById(clientId, sourceName, batchNumber, imageObject) {\n    this.clientService.getClientById(clientId).subscribe(clientRes => {\n      let imageObj = imageObject\n        ? \"assets/images/survey_interaction4.png\"\n        : imageObject;\n\n      this.sourceDetail.unshift(\n        new SourceDetail(sourceName, batchNumber, imageObj, clientRes.content)\n      );\n\n      console.log(\"this.sourceDetail\" + this.sourceDetail);\n    });\n  }\n\n  fetchSurveyRecord(surveyId) {\n    this.surveyService.getSurveyById(surveyId).subscribe(surveyResp => {\n      this.surveyRecords.unshift(\n        new SurveyViewModel(\n          surveyResp.topic,\n          surveyResp.type,\n          surveyResp.questions\n        )\n      );\n      this.getAllAnsTemplates();\n      this.initMainForm(surveyId, this.surveyRecords[0]);\n    });\n  }\n\n  getTemplate(id): any {\n    this.surveyService.getAnsTemplateById(id).subscribe(response => {\n      this.ansTemplate = response;\n      console.log(\"anstemplate \");\n      console.log(this.ansTemplate);\n    });\n\n    // console.log(\"ANSWER TEMPS : \" + JSON.stringify(this.ansTemplates));\n    // return this.ansTemplates.filter(temp => {\n    //   return temp.id.indexOf(id) !== -1;\n    // });\n  }\n\n  initMainForm(surveyId, questions) {\n    console.log(\"QUESTIONS : \");\n    console.log(questions.questions);\n\n    let questionArr: FormArray = new FormArray([]);\n    let answers: FormArray = new FormArray([]);\n\n    this.surveyViewForm = new FormGroup({\n      surveyId: new FormControl(surveyId),\n      questions: questionArr\n    });\n\n    questions.questions.forEach((question, qIndex) => {\n      this.addQuestion(question);\n\n      this.surveyService\n        .getAnsTemplateById(question.answerTemplate.id)\n        .subscribe(response => {\n          this.ansTemplate = response;\n          console.log(\"TEMP OBJ :\");\n          console.log(this.ansTemplate);\n          console.log(this.ansTemplate.answerTemplateType);\n          this.ansTemplate.answers.forEach((answer, ansIndex) => {\n            console.log('INDEX : '+ qIndex);\n            this.addAnswer(qIndex, answer, this.ansTemplate);\n          });\n        });\n    });\n  }\n\n  addQuestion(questionObj) {\n    let id = questionObj.id;\n    let name = questionObj.name;\n    let answers = new FormArray([]);\n    let answerTypeId = questionObj.answerTemplate.id;\n    (<FormArray>this.surveyViewForm.controls[\"questions\"]).push(\n      this.returnQuestion(id, name, answers,answerTypeId)\n    );\n  }\n\n  returnQuestion(id, name, answers,answerTypeId) {\n    return this.fb.group({\n      id: [id || \"\"],\n      name: [name || \"\"],\n      answers: answers,\n      answerTypeId : answerTypeId\n    });\n  }\n\n  addAnswer(questionIndex, answer, ansTemplate) {\n    console.log(\"answers :\" + JSON.stringify(ansTemplate));\n    console.log(answer);\n    (<FormArray>(\n      (<FormGroup>(\n        (<FormArray>this.surveyViewForm.controls[\"questions\"]).controls[\n          questionIndex\n        ]\n      )).controls[\"answers\"]\n    )).push(this.returnAnswer(answer.id, ansTemplate, answer));\n  }\n\n  returnAnswer(id, ansTemplate, answer) {\n    return this.fb.group({\n      id: id,\n      answerTemplateType: new FormControl(ansTemplate.answerTemplateType),\n      answer: answer\n    });\n  }\n\n  printQuestion() {\n    const con = <FormArray>this.surveyViewForm.controls[\"questions\"];\n    const con2   =  <FormArray>(\n      (<FormGroup>(\n        (<FormArray>this.surveyViewForm.controls[\"questions\"]).controls[0]\n      )).controls[\"answers\"].value\n    );\n    console.log(con2[0]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class SurveyService {\r\n  surveyApiUrl: string = environment.surveyApiURL;\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAnswerTemplates(): Observable<any> {\r\n    return this.http\r\n      .get(this.surveyApiUrl + \"answer-templates/\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addNewAnsTemplate(templateObj, items): Observable<any> {\r\n    return this.http\r\n      .post<any>(\r\n        this.surveyApiUrl + \"answer-templates/\",\r\n        templateObj\r\n      )\r\n      .pipe(\r\n        map(data => {\r\n          items.unshift(data.content);\r\n          return items.slice();\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateAnsTemplate(id, item) {\r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + \"answer-templates/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAnsTemplateById(id, items?): Observable<any> {\r\n    console.log(\"by id url : \" + this.surveyApiUrl + \"answer-templates/\" + id);\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + \"answer-templates/\" + id)\r\n      .pipe(\r\n        map(data => {\r\n          console.log(data.content);\r\n          return data.content;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  removeAnsTemplate(row, items): Observable<any> {\r\n    return this.http\r\n      .delete(this.surveyApiUrl + \"answer-templates/\" + row.id)\r\n      .pipe(\r\n        map(data => {\r\n          let i = items.indexOf(row);\r\n          items.splice(i, 1);\r\n          return items;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  addNewSurvey(surveyObj, items): Observable<any> {\r\n    return this.http.post<any>(this.surveyApiUrl + \"surveys\", surveyObj).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateSurveyWithQuestions(id, item) {\r\n    console.log(\"update with ques : \" + this.surveyApiUrl + \"surveys/\" + id);\r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + \"surveys/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateSurveyPopup(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + \"surveys/\" + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAllSurveys(): Observable<any> {\r\n    return this.http\r\n      .get(this.surveyApiUrl + \"surveys\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeSurvey(row, items): Observable<any> {\r\n    return this.http.delete(this.surveyApiUrl + \"surveys/\" + row.id).pipe(\r\n      map(data => {\r\n        let i = items.indexOf(row);\r\n        items.splice(i, 1);\r\n        return items;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getQuestionById(questionId): any {\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + \"questions/\" + questionId)\r\n      .pipe(\r\n        map(response => {\r\n          return response.content;\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getSurveyById(surveyId) {\r\n    return this.http.get<any>(this.surveyApiUrl + \"surveys/\" + surveyId).pipe(\r\n      map(response => {\r\n        return response.content;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    //console.log(error)\r\n    return throwError(error);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  apiURL: \"productionApi\",\r\n  // productApiURL:'https://authentican60aazs63l.ca1.hana.ondemand.com/product/api/',\r\n  // surveyApiURL : 'https://authentican60aazs63l.ca1.hana.ondemand.com/survey/api/',\r\n  //productApiURL: \"http://localhost:10001/api/\",\r\n  //surveyApiURL: \"http://localhost:10002/api/\",\r\n  //imageUrl :\"http://localhost:10001/\",\r\n  productApiURL: \"https://productzg4t4ks63a.hana.ondemand.com/product/api/\",\r\n  surveyApiURL: \"https://surveyzg4t4ks63a.hana.ondemand.com/survey/api/\",\r\n  imageUrl: \"https://productzg4t4ks63a.hana.ondemand.com/product/\"\r\n};\r\n"],"sourceRoot":""}