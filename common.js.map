{"version":3,"sources":["webpack:///./node_modules/ng2-file-upload/ng2-file-upload.js","webpack:///./node_modules/rxjs-compat/_esm5/Observable.js","webpack:///./src/app/model/ClientModel.model.ts","webpack:///./src/app/utility/dateValidator.ts","webpack:///./src/app/views/cruds/crud.service.ts","webpack:///./src/app/views/evote/evote-service.service.ts","webpack:///./src/app/views/product-crud/product-crud.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./index\"));\n","export { Observable } from 'rxjs';\n//# sourceMappingURL=Observable.js.map","export class Content{\r\n    constructor(public id:string, public name:string){}\r\n}\r\n\r\nexport interface Clients{\r\n    status: string;\r\n    statusCode: string;\r\n    content: Content[];\r\n}","//disable backdates and today date\r\nexport class DateValidator {\r\n    static dateValidate() {\r\n        var d = new Date();\r\n        var tomorrowDate = d.getDate() + 1;\r\n        d.setDate(tomorrowDate);\r\n        return d;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { UserDB } from \"../../shared/fake-db/users\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, map, tap } from \"rxjs/operators\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { environment } from \"environments/environment.prod\";\r\n\r\nimport { Clients, Content } from \"../../model/ClientModel.model\";\r\n\r\n@Injectable()\r\nexport class CrudService {\r\n  clientApiUrl: string = environment.productApiURL + \"clients/\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\"\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getItems(): Observable<any> {\r\n    return this.http.get(this.clientApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getClientSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get<string>(this.clientApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addItem(item, items: any[]): Observable<any> {\r\n    return this.http.post<any>(this.clientApiUrl, item, this.httpOptions).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateItem(id, item): Observable<any> {\r\n    return this.http\r\n      .put<any>(this.clientApiUrl + id, item, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeItem(id): Observable<any> {\r\n    return this.http\r\n      .delete(this.clientApiUrl + id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  search(\r\n    filter: { name: string } = { name: \"\" },\r\n    page = 1\r\n  ): Observable<Clients> {\r\n    return this.http.get<Clients>(this.clientApiUrl + \"suggestions\").pipe(\r\n      tap((response: Clients) => {\r\n        response.content = response.content\r\n          .map(content => new Content(content.id, content.name))\r\n\r\n          .filter(content =>\r\n            content.name.toLocaleLowerCase().includes(filter.name)\r\n          );\r\n\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getClientById(clientId): Observable<any> {\r\n    console.log(\"called get client by id\");\r\n    return this.http\r\n      .get<any>(this.clientApiUrl + clientId, this.httpOptions)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getImageById(url) : Observable<Blob>{\r\n    return this.http.get(url,{responseType : 'blob'});\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    console.log(error);\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { Observable, throwError } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class EvoteService {\r\n  surveyApiUrl: string = environment.surveyApiURL + \"evotes/\";\r\n  populateVoterUrl: string = environment.surveyApiURL + \"voters\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllEvotesSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get(this.surveyApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAllEvotes(): Observable<any> {\r\n    return this.http.get(this.surveyApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeEvotes(row, items): Observable<any> {\r\n    return this.http.delete(this.surveyApiUrl + row.id).pipe(\r\n      // map(data => {\r\n      //   console.log(items);\r\n      //   let i = items.indexOf(row);\r\n      //   console.log('I : ' + i);\r\n      //   items.splice(i, 1);\r\n      //   return items;\r\n      // }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  addEvote(evoteObj, items): Observable<any> {\r\n    return this.http.post<any>(this.surveyApiUrl, evoteObj).pipe(\r\n      map(data => {\r\n        items.unshift(data.content);\r\n        return items.slice();\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateEvote(id, item) {\r\n    return this.http\r\n      .put<any>(this.surveyApiUrl + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  populateVoters(voteObj): Observable<any> {\r\n    return this.http\r\n      .post<any>(this.populateVoterUrl, voteObj)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getEvoteById(evoteId): Observable<any> {\r\n    console.log(\"called get evote by id\");\r\n    return this.http\r\n      .get<any>(this.surveyApiUrl + evoteId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { environment } from \"environments/environment.prod\";\r\nimport { throwError, Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ProductCrudService {\r\n  productApiUrl: string = environment.productApiURL + \"products/\";\r\n  recentProduct: any;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n    console.log(\"URL : \" + this.productApiUrl);\r\n  }\r\n\r\n  updateProduct(id, item) {\r\n    return this.http\r\n      .put<any>(this.productApiUrl + id, item)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  addProduct(productObj, items): Observable<any> {\r\n    return this.http.post<any>(this.productApiUrl, productObj).pipe(\r\n      map(response => {\r\n        console.log(JSON.stringify(response.content.id));\r\n        return response.content.id;\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getAllProducts(): Observable<any> {\r\n    return this.http.get(this.productApiUrl).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  removeProduct(row, items): Observable<any> {\r\n    return this.http\r\n      .delete(this.productApiUrl + row.id)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAllProductSuggestions(): Observable<any> {\r\n    return this.http\r\n      .get(this.productApiUrl + \"suggestions\")\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getProductById(proId): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.productApiUrl + proId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getProductDetails(proId): Observable<any> {\r\n    return this.http\r\n      .get<any>(environment.productApiURL + \"productDetails/\" + proId)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse | any) {\r\n    //console.log(error)\r\n    return throwError(error);\r\n  }\r\n}\r\n"],"sourceRoot":""}